<ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>
>>>>>>>>>>>>>>>> [['void', 'ns3::Ptr<ns3::Packet>', 'ns3::WifiMacHeader const*', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<ns3::Packet const>', 'unsigned short', 'ns3::Address const&', 'ns3::Address const&', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<ns3::Packet const>', 'unsigned short', 'ns3::Address const&', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['bool', 'ns3::Ptr<ns3::Packet const>', 'ns3::Address const&', 'unsigned int', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::WifiMacHeader const&', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::Packet>', 'ns3::Mac48Address', 'ns3::Mac48Address', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Mac48Address', 'unsigned char', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Mac48Address', 'unsigned char', 'bool', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::Socket>', 'ns3::Address const&', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['bool', 'ns3::Ptr<ns3::Socket>', 'ns3::Address const&', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<ns3::Packet const>', 'unsigned short', 'ns3::Address const&', 'ns3::Address const&', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['unsigned char', 'ns3::Ptr<ns3::QueueItem>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty']]
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AcIndex')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AcIndex' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x109814e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameter')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameter' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x109814e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a144950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a144d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a14f090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a14f550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a14f810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a14fa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a14fc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a14fe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a15b090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::pair< ns3::Ptr< ns3::Packet >, ns3::AmpduSubframeHeader >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::pair< ns3::Ptr< ns3::Packet >, ns3::AmpduSubframeHeader >' => failure
'std::pair< ns3::Ptr< ns3::Packet >, ns3::AmpduSubframeHeader >' did not match
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['std::pair< ns3::Ptr< ns3::Packet >, ns3::AmpduSubframeHeader >'],) in wrapper <pybindgen.Container 'std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmpduSubframeHeader > >'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::pair< ns3::Ptr< ns3::Packet >, ns3::AmsduSubframeHeader >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::pair< ns3::Ptr< ns3::Packet >, ns3::AmsduSubframeHeader >' => failure
'std::pair< ns3::Ptr< ns3::Packet >, ns3::AmsduSubframeHeader >' did not match
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['std::pair< ns3::Ptr< ns3::Packet >, ns3::AmsduSubframeHeader >'],) in wrapper <pybindgen.Container 'std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmsduSubframeHeader > >'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a15bbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OcbWifiMac >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OcbWifiMac >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OcbWifiMac *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a15ba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a15b310>))
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::WifiMacHeader const *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Packet>, ns3::WifiMacHeader const*, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< bool, ns3::Ptr<ns3::NetDevice>, ns3::Ptr<ns3::Packet const>, unsigned short, ns3::Address const&, ns3::Address const&, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< bool, ns3::Ptr<ns3::NetDevice>, ns3::Ptr<ns3::Packet const>, unsigned short, ns3::Address const&, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< bool, ns3::Ptr< ns3::Packet const >, ns3::Address const &, unsigned int, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< bool, ns3::Ptr<ns3::Packet const>, ns3::Address const&, unsigned int, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::WifiMacHeader const&, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::Mac48Address, ns3::Mac48Address, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Packet>, ns3::Mac48Address, ns3::Mac48Address, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Mac48Address, unsigned char, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Mac48Address, unsigned char, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Mac48Address, unsigned char, bool, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Mac48Address, unsigned char, bool, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Socket>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Socket>, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Socket>, ns3::Address const&, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< bool, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< bool, ns3::Ptr<ns3::Socket>, ns3::Address const&, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::NetDevice>, ns3::Ptr<ns3::Packet const>, unsigned short, ns3::Address const&, ns3::Address const&, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1d1d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1d1e10>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1133: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10a1d1c90>
  cls.add_constructor([param('uint8_t', 'type'), param('uint8_t const *', 'buffer'), param('uint8_t', 'len')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1d1d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1ef3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1ef510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1ef610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1efa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1efb50>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1144: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyAllFrom (params?);
  [param('uint8_t const *', 'buffer'), param('uint8_t', 'len')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1efc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1efe10>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1149: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyAllTo (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1eff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1f80d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1153: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyFrom (params?);
  [param('uint8_t const *', 'buffer'), param('uint8_t', 'len')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1f8210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1f8390>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1158: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyTo (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1f8490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1f8610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1f8a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1f8e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1f8210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1efd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a1efb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a203150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2035d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a203710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a203b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Application >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Application >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Application *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a20a490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a20a750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a20aad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a20ac10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a212090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Application >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Application >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Application *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a212350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2125d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a212750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Application > const, std::vector< ns3::Ptr< ns3::Application > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Application > const, std::vector< ns3::Ptr< ns3::Application > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Application > const, std::vector< ns3::Ptr< ns3::Application > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1220: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Application > const, std::vector< ns3::Ptr< ns3::Application > > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Application > const, std::vector< ns3::Ptr< ns3::Application > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Application > const, std::vector< ns3::Ptr< ns3::Application > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Application > const, std::vector< ns3::Ptr< ns3::Application > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1225: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Application > const, std::vector< ns3::Ptr< ns3::Application > > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Application >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Application >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Application *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a21c610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a21c650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a21ca90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a21ced0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a223050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a223450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a223590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AsciiTraceHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AsciiTraceHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2239d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a22a350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a22a410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_Ios_Openmode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_Ios_Openmode' => success ((<class 'ns3modulegen_core_customizations.IosOpenmodeParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a22a2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a22a890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a21c0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a21c0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a22aa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a22ad10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a235090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a235250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a235550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a235890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a235890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a235b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a235e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a23c1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a23c390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a23c690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a23c9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a23c9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a23cc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a23cf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a245310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2454d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2457d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a245b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a245b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a245dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a24b110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a24b450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a24b610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a24b910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a24ba50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a24bd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a24bd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a253150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a253290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a253550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a253550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a253650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AsciiTraceHelperForDevice const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AsciiTraceHelperForDevice const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a253a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a25a1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a25a310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a25a5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a25a5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a25a9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a25ad10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a25aed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a264190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a264310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a264410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a264510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a264890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a264c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a264c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a264f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a26c150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a26c250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a26c610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a26c990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a26c990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a26cd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a26ced0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a26cfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a273390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a273710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a273710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a273a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a273c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a273d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a273e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a273f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a27a2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a27a650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a27a650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a27a790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a27aad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a27ac50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a283090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2833d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a283650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2839d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2839d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a283c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a283c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AsciiTraceHelperForIpv4 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AsciiTraceHelperForIpv4 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2893d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a289ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a289c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a289ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a289ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a289fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a293410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a293750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a293910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a293910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a293c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a293e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a293f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a299050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a299150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2994d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a299850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a299850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a299990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a299cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a299e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a299f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a1350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a16d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a16d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a1a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a1c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a1d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a80d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a8450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a8450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a87d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a8950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a8a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a8b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a8c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2a8fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2af390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2af390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2af4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2af590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2af910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2afa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2afe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2b7210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2b7490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2b7810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2b7810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2b7ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2b7ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2b7bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AsciiTraceHelperForIpv6 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AsciiTraceHelperForIpv6 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2bf310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2bfa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2bfb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2bfe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2bfe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2bff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2c8350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2c8690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2c8850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2c8850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2c8bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2c8d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2c8e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2c8f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2cf090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2cf410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2cf790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2cf790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2cf8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2cfc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2cfd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2cfe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2d8290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2d8610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2d8610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2d89d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2d8b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2d8c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2d8fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e0390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e0390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e0710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e0890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e0990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e0a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e0b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e0f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e72d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e72d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e7410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e7750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e78d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e7cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a212dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2e7e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2ef1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2ef1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2ef490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2ef490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2ef590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeConstructionList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeConstructionList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2efc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2f83d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2f8510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2f8850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2f8a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_List_const_iterator< ns3::AttributeConstructionList::Item >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_List_const_iterator< ns3::AttributeConstructionList::Item >' => failure
'std::_List_const_iterator< ns3::AttributeConstructionList::Item >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1498: Warning: exception TypeLookupError(['std::_List_const_iterator< ns3::AttributeConstructionList::Item >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_List_const_iterator< ns3::AttributeConstructionList::Item >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_List_const_iterator< ns3::AttributeConstructionList::Item >' => failure
'std::_List_const_iterator< ns3::AttributeConstructionList::Item >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1503: Warning: exception TypeLookupError(['std::_List_const_iterator< ns3::AttributeConstructionList::Item >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2ff290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2ff510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeConstructionList::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeConstructionList::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2f8f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a2ffdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a306350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a306b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Bar const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Bar const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a30f150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a30fad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a30fad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a30fbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a30fcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a319250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a319810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a319e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a321550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BlockAckAgreement const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BlockAckAgreement const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a321c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a32b450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a32b550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a32b8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a32bd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a333190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3335d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a333a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a333e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a33c2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a33c710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a33cb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a33cf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a346410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a346550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a346950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a346a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a346e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a34e310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a34e450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a34e850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a34ecd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a34ee10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a357290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3573d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3577d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a357910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a357d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a357e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BlockAckCache const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BlockAckCache const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a35f610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a35fa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CtrlBAckResponseHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CtrlBAckResponseHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a35fb90>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1644: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::FillBlockAckBitmap (params?);
  [param('ns3::CtrlBAckResponseHeader *', 'blockAckHeader')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a35fd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a368190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3682d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3683d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a35fad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a368650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a368a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a368b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a36f390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a36f4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a36f5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a36f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a36fad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a36fc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a36fd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a378150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtAddBaRequestHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtAddBaRequestHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a378290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a378450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a378850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a378990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a378a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a378e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a378fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a37f110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a37f510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a37f650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a37f750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OriginatorBlockAckAgreement::State')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OriginatorBlockAckAgreement::State' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a37f850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a37fc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a37fd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a37fe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3872d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a387410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a387510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a387ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a387b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a387f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a38f410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a38f550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a38f650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a38fa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Bar &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Bar &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a38fb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a38ffd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a397150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a397550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a397990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a397ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a397bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a397cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a39f110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a39f250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a39f350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a39f450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a39f850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a39f990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a39fa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a39fe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CtrlBAckResponseHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CtrlBAckResponseHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a39ffd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3a71d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3a72d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3a73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3a74d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3a78d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3a7a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3a7b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3a7c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader::QosAckPolicy')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader::QosAckPolicy' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3a7d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ad310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ad350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ad990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ad9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3adb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3adc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3add50>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1757: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::PeekNextPacketByTidAndAddress (params?);
  [param('ns3::WifiMacHeader &', 'hdr'), param('ns3::Mac48Address', 'recipient'), param('uint8_t', 'tid'), param('ns3::Time *', 'timestamp')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3adb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3adbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3adcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ad990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3b7290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Mac48Address, unsigned char, bool, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Mac48Address, unsigned char, bool, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3b73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3b7d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3b7e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3be2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BlockAckType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BlockAckType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3be410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3be810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Mac48Address, unsigned char, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Mac48Address, unsigned char, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3be950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ad810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ad950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3c9510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiMacQueue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiMacQueue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacQueue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3c97d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3c9ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3c9c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3d0610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacTxMiddle *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacTxMiddle *' => failure
'ns3::MacTxMiddle *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1793: Warning: exception TypeLookupError(['ns3::MacTxMiddle *'],) in wrapper public: retval? ???::SetTxMiddle (params?);
  [param('ns3::MacTxMiddle *', 'txMiddle')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3d0810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3d0950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3d8350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Mac48Address, unsigned char, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Mac48Address, unsigned char, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3d8490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3d8e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiRemoteStationManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiRemoteStationManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3de110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3de210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3de510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3de510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3de6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3dead0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3dec10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ded10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3dee10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3e6250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3e6390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3e6490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3e6890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtAddBaResponseHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtAddBaResponseHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3e69d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3e6b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ee350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ee750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3ee850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3eec50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3f6110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3f6250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3f6690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3f67d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3f6c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3f6d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3fd1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3fd690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream *' => failure
'std::ostream *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1854: Warning: exception TypeLookupError(['std::ostream *'],) in wrapper public: retval? ???::CopyData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3fd890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3fd9d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1859: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3fdad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3fdc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3fdd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a408150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a408290>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1868: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Deserialize (params?);
  [param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4083d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a408890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a3fd9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => failure
'uint8_t const *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1888: Warning: exception TypeLookupError(['uint8_t *'],) in wrapper public: retval? ???::PeekData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a408210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a408d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a40e190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a40e2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a40e6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a40e810>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1901: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a40e950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4180d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a418210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a418610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a418750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a418850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a418bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a418d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a41f250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a41f690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a408290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a41fb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a41ffd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a427450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a427590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a427910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a427d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a42f210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a42f350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a42f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a42f850>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1965: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Read (params?);
  [param('uint8_t *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a42f950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a42fa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a42fbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a42ffd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a42f850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a439650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a439a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a439ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a441350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a441790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a441bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a44c050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a44c490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a44c8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a44ca10>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2013: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Write (params?);
  [param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a44cb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a44cc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a44cdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a44ca90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a44c8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a454510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a454650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a454a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a454b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a454f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a45c110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a45c510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a45c650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a45ca50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a45cb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a45cf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a464110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a464510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a464650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a464a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a464b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a464fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a46c150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a46c550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a46c690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a46c790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagIterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagIterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a46cb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a46cfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagIterator::Item')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagIterator::Item' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a474450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagIterator::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagIterator::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a474910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a474d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a47c1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a47c610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a47c750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a47cb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a483350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a483790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4838d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4839d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a483ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a483bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a48d050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a48d190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a48d650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a48d790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a48db90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a48dcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a494110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a494250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a494650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4947d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4948d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a494cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList::Iterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList::Iterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a49b190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a49b5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a49ba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList::Iterator::Item')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList::Iterator::Item' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a49be50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList::Iterator::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList::Iterator::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4a7310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4a7750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4a7a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4af110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4af750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4afd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4b9410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4b9ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::CallbackImplBase >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::CallbackImplBase >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackImplBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4c2450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::CallbackImplBase >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::CallbackImplBase >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackImplBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4c2a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CapabilityInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CapabilityInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4c2cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4cb450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4cb5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4cba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4cbe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4d32d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4d3710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4d3b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4d3f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4db150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4db590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4db9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4dbe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4dbf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4e5390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4e54d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameter const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameter const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4e5c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4ec050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4ec690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4eccd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4f43d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EventImpl > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EventImpl > const &' => failure
'ns3::Ptr< ns3::EventImpl > const &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2268: Warning: exception TypeLookupError(['ns3::Ptr< ns3::EventImpl > &'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10a4f4b50>
  cls.add_constructor([param('ns3::Ptr< ns3::EventImpl > const &', 'impl'), param('uint64_t', 'ts'), param('uint32_t', 'context'), param('uint32_t', 'uid')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4f4d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4ff250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4f4c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4ff910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a4ffd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a505210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventImpl *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventImpl *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a505650>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2302: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::PeekEventImpl (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hasher const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hasher const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a505810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Hash::Implementation >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Hash::Implementation >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Implementation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a50e210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a50e4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a50e610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a50e790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a50ec10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a50ed50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5161d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a516310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a505650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a516790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5168d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hasher &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hasher &' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a516d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Inet6SocketAddress const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Inet6SocketAddress const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a51e250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a51e6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a51e7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a51eb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a51ef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a527350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5274d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a527890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Inet6SocketAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Inet6SocketAddress' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a527c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a527e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a531310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a531750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a531b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a531cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5381d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a538310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a538710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a538850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::InetSocketAddress const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InetSocketAddress const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a538c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a542150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a542250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a542610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5429d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a542d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a542f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a54b310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::InetSocketAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InetSocketAddress' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a54b710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a54b890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a54bd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5521d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a552610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a552a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a552b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a55b090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a55b1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a55b5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a55b710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a55bb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a55bc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::InterferenceHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InterferenceHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a564110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::InterferenceHelper::Event >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::InterferenceHelper::Event >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InterferenceHelper::Event *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2437: Warning: exception TypeLookupError(['ns3::Ptr< ns3::InterferenceHelper::Event >', 'ns3::InterferenceHelper::Event *'],) in wrapper public: retval? ???::Add (params?);
  [param('uint32_t', 'size'), param('ns3::WifiTxVector', 'txVector'), param('ns3::WifiPreamble', 'preamble'), param('ns3::Time', 'duration'), param('double', 'rxPower')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a564a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a564bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a564cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::InterferenceHelper::SnrPer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InterferenceHelper::SnrPer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a56e110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::InterferenceHelper::Event >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::InterferenceHelper::Event >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InterferenceHelper::Event *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2445: Warning: exception TypeLookupError(['ns3::Ptr< ns3::InterferenceHelper::Event >', 'ns3::InterferenceHelper::Event *'],) in wrapper public: retval? ???::CalculatePlcpHeaderSnrPer (params?);
  [param('ns3::Ptr< ns3::InterferenceHelper::Event >', 'event')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::InterferenceHelper::SnrPer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InterferenceHelper::SnrPer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a56e390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::InterferenceHelper::Event >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::InterferenceHelper::Event >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InterferenceHelper::Event *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2449: Warning: exception TypeLookupError(['ns3::Ptr< ns3::InterferenceHelper::Event >', 'ns3::InterferenceHelper::Event *'],) in wrapper public: retval? ???::CalculatePlcpPayloadSnrPer (params?);
  [param('ns3::Ptr< ns3::InterferenceHelper::Event >', 'event')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a56e6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a56ebd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a56ed10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ErrorRateModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ErrorRateModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErrorRateModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a576310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a576650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a56e450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a564910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a576a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ErrorRateModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ErrorRateModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErrorRateModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a576d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a57d0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a57d210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::InterferenceHelper::SnrPer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InterferenceHelper::SnrPer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a57d950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a57dd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a587390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a587a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a590210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5905d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5909d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a590b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a590fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a599150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a599610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a599750>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2524: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Deserialize (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a599890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a599d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5a0190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5a05d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5a0a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5a0b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5a9050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a599610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5a9650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5a9a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5a9bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b10d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b1510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b1950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b1a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b1f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b93d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b9510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b99d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2599: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b9bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b9d10>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2604: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b9d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b9c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5b9f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5c10d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5c1890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5c1990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5c1d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5c91d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5c9610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5c9a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5c9e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5d1310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5d1750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5d1890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5d1c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5d1dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5da210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5da350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5da750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5dab90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5dacd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5e3110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5e3590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5e3cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5e3e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5ec310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5ec610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5ec610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5ec990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >' => failure
'std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2692: Warning: exception TypeLookupError(['std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >'],) in wrapper public: retval? ???::Add (params?);
  [param('std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >', 'ipInterfacePair')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5ece50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5ecf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5f3050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >' => failure
'__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2701: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >' => failure
'__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2706: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >' => failure
'std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2711: Warning: exception TypeLookupError(['std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >'],) in wrapper public: retval? ???::Get (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5fd690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5fd810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5fd910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5fdd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a604190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6042d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6043d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a604810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5f3c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5f33d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5f3810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a5ec950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a604a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a604e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a60e310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a60e750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a60ebd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a60ed10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a617190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6172d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6173d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a617810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2784: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a617a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a617850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a61e110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a61e550>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2801: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10a61e4d0>
  cls.add_constructor([param('uint8_t *', 'address')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a61e690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a61eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a61ef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6280d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a628590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6286d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a628b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a628cd0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2819: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Deserialize (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a628e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a630290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a628cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a630750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a630b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a630cd0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2844: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::GetBytes (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a630dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a638250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a638690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a638ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a638f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a642390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6427d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a642c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a64a090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a630b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a64a3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a64a890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a64acd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a652150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a652590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6529d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a652b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a652fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a65b450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a65b890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac16Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac16Address' => failure
'ns3::Mac16Address' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2934: Warning: exception TypeLookupError(['ns3::Mac16Address'],) in wrapper public: retval? ???::MakeAutoconfiguredAddress (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a65ba50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a65bb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a65bc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a65ba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac64Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac64Address' => failure
'ns3::Mac64Address' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2944: Warning: exception TypeLookupError(['ns3::Mac64Address'],) in wrapper public: retval? ???::MakeAutoconfiguredAddress (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6630d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac16Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac16Address' => failure
'ns3::Mac16Address' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2949: Warning: exception TypeLookupError(['ns3::Mac16Address'],) in wrapper public: retval? ???::MakeAutoconfiguredLinkLocalAddress (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a663290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6633d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6637d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac64Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac64Address' => failure
'ns3::Mac64Address' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2959: Warning: exception TypeLookupError(['ns3::Mac64Address'],) in wrapper public: retval? ???::MakeAutoconfiguredLinkLocalAddress (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a663990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a663ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a663ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66c050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66c450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2974: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66c650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66c790>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2979: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66c890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66c9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66ce90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66cfd0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:2987: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Set (params?);
  [param('uint8_t *', 'address')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a675450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66ce90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a66c810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceAddress const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceAddress const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a663910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a65b910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a675990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a675dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceAddress::Scope_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceAddress::Scope_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a67d250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceAddress::State_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceAddress::State_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a67d690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a67dad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a67dc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a685050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a685190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6855d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a685710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a685b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceAddress::Scope_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceAddress::Scope_e' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a685c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a68d090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceAddress::State_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceAddress::State_e' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a68d1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a68d610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a68dd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a696090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a68ded0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a696490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6965d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a696a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a696b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a696c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > > >' => failure
'__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3071: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > > >' => failure
'__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3076: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv6 >, unsigned int > > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a69ef90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6a6110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6a6210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a69ebd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a69ed10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a69e250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a69e390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a69e790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6a6310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6a6690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6a6b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6a6c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6a6d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b0190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b02d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b03d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b0750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b08d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b0cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b0e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b61d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b6350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b6450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b6b90>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3129: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10a6b6b10>
  cls.add_constructor([param('uint8_t *', 'prefix')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b6cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c0150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c0510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c0990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c0dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c0f10>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3142: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::GetBytes (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c9050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c9490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c98d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c9d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d0190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d02d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6c0dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6b6c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d0650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d0a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3177: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d0c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d9450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d9850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d9c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d9dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6e12d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6e1410>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3204: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyFrom (params?);
  [param('uint8_t const *', 'buffer')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6e1550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6e1690>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3209: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyTo (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6e1790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6e1bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6e1d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6e1750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6e15d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6d09d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6eb3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6eb810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6ebc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6f30d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6f3210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowAggregationCapableTransmissionListener const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowAggregationCapableTransmissionListener const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6f3710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6f3e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6f3f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6fc090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6fc750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6fca50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6fca50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a6fcb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a707210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a707350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a707450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a707ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a707c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a707d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a70e3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a70e510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MpduAggregator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MpduAggregator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MpduAggregator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a70ee50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MsduAggregator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MsduAggregator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MsduAggregator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a717610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a717bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a717d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a717e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a71f4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a71f610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a71f710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a71fd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a71fed0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3306: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::GetNextSequenceNumberfor (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiMacQueue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiMacQueue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacQueue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a727790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a727d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a727e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a731810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a731850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a727050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a71ff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a71fe50>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3321: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::PeekNextPacketInBaQueue (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a739090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a739210>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3326: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::PeekNextSequenceNumberfor (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7398d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a739a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a739b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a739c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a741310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a741450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a741550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowDcfListener const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowDcfListener const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a741c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a749390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a731650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a731790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a749c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a753350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a753490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a753b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a753c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a75c310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a75c450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowTransmissionListener const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowTransmissionListener const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a75cb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a768250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a768950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a770050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a770190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a770290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a770910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CtrlBAckResponseHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CtrlBAckResponseHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a770a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a770c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a770d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a770e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a770f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7775d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a777710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a777810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a777e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a77f590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a77f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a77fd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a787450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a787b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowTransmissionParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowTransmissionParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a791250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a791950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a791d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a79b210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a79b650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a79ba90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a79bed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7a4350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7a4790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7a4bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7ac050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7ac190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7ac590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7ac6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7acad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7acf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7b5390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7b57d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7b5c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7bd090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7bd4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7bd910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7bdd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7c71d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7c7610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7c7a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7c7e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7cf310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7cf790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7d7110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7d73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7d7790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7d7950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7d7d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7d7ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e1350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e1650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e18d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e1a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3580: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3585: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e7910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e7950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e7d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7f1210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7f1b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7f1e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7f9210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7f93d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e72d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e74d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e7690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7e1f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7f9910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7f9ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a7f9c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a801150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a801310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8014d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a801690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a801850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a801c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a801dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a807210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a807510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a807790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a807910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3631: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a80f190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a80f310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a807d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a807ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a807fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3644: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a80fed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a80ff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a818350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a818790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a818f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a820390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8204d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8205d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a820a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a820b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a820c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a829150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a829410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a829850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a829990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a829a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a829f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8300d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8301d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a830690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8307d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8308d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8309d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a830e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a830fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a839110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8395d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a839710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a839810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a839910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a839dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a839f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a83f050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a83f550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeConstructionList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeConstructionList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a83f690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a83fe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectDeleter const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectDeleter const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a846c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a850090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Object *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8501d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3732: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::Delete (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a850350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a850ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8500d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a859110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a859550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a859690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a859790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a859c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a859d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8611d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a861310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a861710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a861890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a861c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a86c450>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3781: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10a86c3d0>
  cls.add_constructor([param('uint8_t const *', 'str'), param('uint32_t', 'length')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a86c590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a86c6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a86cb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a86cdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier::OrganizationIdentifierType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier::OrganizationIdentifierType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a874250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a874690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a874ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a874c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a87c090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier::OrganizationIdentifierType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier::OrganizationIdentifierType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a87c1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OriginatorBlockAckAgreement const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OriginatorBlockAckAgreement const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a87c610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a87cd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a87ce50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a885210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a885650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a885a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a885ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a88d350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a88d790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a88dbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a88dd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a895150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OriginatorBlockAckAgreement::State')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OriginatorBlockAckAgreement::State' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a895290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8956d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8957d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a895b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a895fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a0150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a0610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a0750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a08d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a0d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a0e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a6290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a63d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a6590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::ItemIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::ItemIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a6990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a6ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8a6ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8ae050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8ae150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8ae550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8ae690>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3897: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Deserialize (params?);
  [param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8ae7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8aec10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8b7090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8ae690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8b76d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8b7810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8b7c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8b7d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8be190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8be2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8be450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8be850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8be990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8beb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8bef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8c60d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:3938: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8c6510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8c6910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8c6f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8d0410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8d0a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8d90d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8d9750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::ItemIterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::ItemIterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8d9e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8e1290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8e1450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8e17d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::Item')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::Item' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8e1c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagIterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagIterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8eb110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8eb550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagIterator::Item')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagIterator::Item' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8eb990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagIterator::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagIterator::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8ebe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8f4250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8f4390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8f47d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8f4f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8fd3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8fd510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagList::TagData const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagList::TagData const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8fd990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8fde90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a8fdfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a906450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a906590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9069d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a906e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a906f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagList::TagData const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagList::TagData const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a90f710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a90fb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t [ 21 ]')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t [ 21 ]' => failure
'uint8_t [ 21 ]' did not match
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['uint8_t [ 21 ]'],) in wrapper None
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagList::TagData *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagList::TagData *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9162d0>))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper None
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a916450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Parameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Parameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a916210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a916f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9205d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a920c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9292d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a929910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9312d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a931750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a931bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a931d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a931e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t &' => failure
'uint32_t &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4086: Warning: exception TypeLookupError(['uint32_t &'],) in wrapper public: retval? ???::Diff (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a931e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a93b290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a93b710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a93bb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a93bf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a943410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a943850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a943c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a94c110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a93b050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a94c790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a94c8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a94c9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a94cad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a94cbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a94ccd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a954150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a954590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9546d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_Ios_Openmode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_Ios_Openmode' => success ((<class 'ns3modulegen_core_customizations.IosOpenmodeParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a954850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a954c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t * const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t * const' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a954dd0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4144: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Read (params?);
  [param('uint8_t * const', 'data'), param('uint32_t', 'maxBytes'), param('uint32_t &', 'tsSec'), param('uint32_t &', 'tsUsec'), param('uint32_t &', 'inclLen'), param('uint32_t &', 'origLen'), param('uint32_t &', 'readLen')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a954f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95d090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95d190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const * const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const * const' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95d290>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4148: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Write (params?);
  [param('uint32_t', 'tsSec'), param('uint32_t', 'tsUsec'), param('uint8_t const * const', 'data'), param('uint32_t', 'totalLen')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95d150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95d190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95d450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95d710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95da50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95db90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95dc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95dd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a95d310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a954e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t const' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a966290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PcapHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PcapHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9667d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PcapFileWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PcapFileWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PcapFileWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96c150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96c210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_Ios_Openmode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_Ios_Openmode' => success ((<class 'ns3modulegen_core_customizations.IosOpenmodeParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96c0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PcapHelper::DataLinkType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PcapHelper::DataLinkType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96c390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96c390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96c590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96c990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96cad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96cd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a96cd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9731d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a973310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9735d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9735d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9736d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PcapHelperForDevice const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PcapHelperForDevice const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a973b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97a290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97a3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97a690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97a690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97a790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97ab90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97acd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97add0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97aed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a97afd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a982390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a982510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a982610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a982750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a982ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a982c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a982d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a982e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a98b210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a98b390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a98b490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a98b590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a98b690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a98ba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a98bb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a98bc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9930d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a993210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9934d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9934d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9935d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PcapHelperForIpv4 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PcapHelperForIpv4 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a993cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a99b450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a99b590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a99b850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a99b850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a99b950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a99bd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a99be90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a99bf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9a40d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9a41d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9a4550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9a46d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9a47d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9a4b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9a4d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9a4e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ac1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ac350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ac450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ac550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ac650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ac9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9acb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9acf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9b40d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9b4390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9b4390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9b4490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PcapHelperForIpv6 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PcapHelperForIpv6 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9b4b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9bc310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9bc450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9bc710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9bc710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9bc810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9bcc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a21c590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a17be10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9bcc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9bcd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9c5150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9c5310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9c5410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9c57d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9c5950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9c5a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9c5dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9c5f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9cc090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9cc190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9cc290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9cc610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9cc790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ccb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9cccd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ccf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ccf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9d30d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SchInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SchInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9d37d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9d3fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9dc110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9dc210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9dc610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9dc710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9dc810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameters' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9dc910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9dcc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameters' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9e5350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9e59d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ec090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9eca90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9f5090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Simulator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Simulator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9f5510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9f5950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9f5a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9f5f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ff410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ff850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ff990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SimulatorImpl >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SimulatorImpl >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimulatorImpl *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4348: Warning: exception TypeLookupError(['ns3::Ptr< ns3::SimulatorImpl >', 'ns3::SimulatorImpl *'],) in wrapper public: retval? ???::GetImplementation (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa07150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10a9ffe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa077d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa07910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa07dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa0f250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa0f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa0f810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa0fd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SimulatorImpl >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SimulatorImpl >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimulatorImpl *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4383: Warning: exception TypeLookupError(['ns3::Ptr< ns3::SimulatorImpl >', 'ns3::SimulatorImpl *'],) in wrapper public: retval? ???::SetImplementation (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa0ff90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa17210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa17610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa17a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa17bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::StatusCode const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::StatusCode const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa1e0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa1e490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa1e610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa1ea50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa1ee90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa27310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa27490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa278d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa27d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa2f510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa2f950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa2fa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa36210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa368d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa36d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4460: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa40510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa40650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa40ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa40f50>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4472: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10aa40ed0>
  cls.add_constructor([param('uint8_t *', 'start'), param('uint8_t *', 'end')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa49090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa491d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa495d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa49710>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4480: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Read (params?);
  [param('uint8_t *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa49810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa40f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa36150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa49c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa49e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa50310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa50450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa50850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa50990>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4508: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Write (params?);
  [param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa50b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa50c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa59090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa591d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa595d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa59710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa59b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa59c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa62110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa62250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TimeWithUnit const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TimeWithUnit const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa62690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa50910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa629d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TracedValue< unsigned int > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TracedValue< unsigned int > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa690d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int const &' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa69610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa69a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa69bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa69d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa721d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa72310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa727d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa72910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa72ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa72ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa79050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa79510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa799d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int const &' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa79b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TxInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TxInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa81090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa81850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa81950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa81a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa81b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa81ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa89590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa89bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa91250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TxProfile const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TxProfile const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa91950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa9a110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa9a210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa9a310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa9a650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aa9acd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaa3390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaa39d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaab110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaab8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaabd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaabe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaabf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aab4090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aab4450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aab46d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::SupportLevel')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::SupportLevel' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aab46d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aab46d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aab4c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aab4dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aab4ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aab4fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aabd110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aabd4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aabd750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::SupportLevel')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::SupportLevel' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aabd750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aabd750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aabdc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aabde10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aabdf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::TraceSourceAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::TraceSourceAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aac4250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aac4590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aac46d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aac47d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::TraceSourceAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::TraceSourceAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aac4ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aac4ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::SupportLevel')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::SupportLevel' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aac4b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aac4b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::AttributeInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::AttributeInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aacb190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aacb310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aacb710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aacb850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aacbc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< ns3::ObjectBase *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< ns3::ObjectBase *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< ns3::ObjectBase *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4654: Warning: exception TypeLookupError(['ns3::Callback< ns3::ObjectBase *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: retval? ???::GetConstructor (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aad2710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aad2b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aad2fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aadd490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aad20d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aad2210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aad2610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaddc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::TraceSourceInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::TraceSourceInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aae3110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aae3250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aae3650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aae3a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aae3f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaec390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaec810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaecc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaecd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaf4210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaf4350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::AttributeInformation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::AttributeInformation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaf4450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaf4890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaf49d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaf4dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaf4f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aafb050>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4738: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::LookupByHashFailSafe (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaf4fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aafb1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::TraceSourceAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::TraceSourceAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aafb7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aafb8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::TraceSourceAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::TraceSourceAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aafbe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aafbf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::TraceSourceInformation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::TraceSourceInformation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aafbfd0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4753: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::LookupTraceSourceByName (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aafbe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab04490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab045d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab04850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab04bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab04d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab0c150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab04050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aafb110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aaf4dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab0c650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab0c790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::AttributeInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::AttributeInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab0cf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab13510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab13cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab1c250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab1c890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab26090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab26690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab26e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::SupportLevel')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::SupportLevel' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab2e450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab2eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::TraceSourceInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::TraceSourceInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab36550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::TraceSourceAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::TraceSourceAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab36b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab3d0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab3d710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab3dd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::SupportLevel')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::SupportLevel' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab493d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab49a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab511d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab51650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab51750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab51d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab5a490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab5abd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab63090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab63190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab63290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab638d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab63f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab6d690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VendorSpecificContentManager const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VendorSpecificContentManager const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab6ddd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab74510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab74650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VscCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VscCallback' => failure
'ns3::VscCallback' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4867: Warning: exception TypeLookupError(['ns3::VscCallback'],) in wrapper public: retval? ???::FindVscCallback (params?);
  [param('ns3::OrganizationIdentifier &', 'oi')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab74b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab74cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7d190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7d2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VscCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VscCallback' => failure
'ns3::VscCallback' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4875: Warning: exception TypeLookupError(['ns3::VscCallback'],) in wrapper public: retval? ???::RegisterVscCallback (params?);
  [param('ns3::OrganizationIdentifier', 'oi'), param('ns3::VscCallback', 'cb')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VsaInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VsaInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7d310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7d850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7d950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7da90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7dd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7dd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7de50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VsaTransmitInterval')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VsaTransmitInterval' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab7df50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab86350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab869d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab86dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab8c510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab8cb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VsaTransmitInterval')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VsaTransmitInterval' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab94210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab94a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WaveBsmHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveBsmHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab9c110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab9c850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab9c990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab9ca90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int > &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int > &' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ab9ce90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WaveBsmStats >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WaveBsmStats >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveBsmStats *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aba75d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aba7910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aba7a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aba7ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abae250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abae4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abae650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abae7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abae8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abae9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abaead0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< double >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abaebd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abaedd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abaeed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abb6290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abb6410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abb6510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WaveHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abb6a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abbd190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abbd2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abbd410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abbd810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abbd950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abbde90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abbdfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WaveHelper')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveHelper' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abc5410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abc5850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abc5c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abc5e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abc5fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abcd1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abcd890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abcda10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abcdbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abcdf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abd54d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abd5650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abd5810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abd59d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdf050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdf190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdf290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdf390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdf550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdf650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdf810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdf910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdfad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdfbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdfd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abdfe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abe6f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abec110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abec210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abec3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abec4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abec690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abec790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abec950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abeca50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abecc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abecd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abeced0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abecfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf21d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf22d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf27d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf2f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf9090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf91d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiHelper')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiHelper' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf95d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf9a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf9e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10abf9fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac011d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac01390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac01a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac01bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac01d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac06150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac06690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac06810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac069d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac06b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac109d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac10f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac18090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac18250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac18350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac18510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac18610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac187d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac188d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac18d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac18ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac1f610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiMac >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiMac >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMac *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac1ff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac27550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac27690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac27790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac27890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac27a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac27b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac27d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac27e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac27fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac30110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac302d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac303d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac30590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac30690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac30850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac30950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac30b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac30c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac30dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac30ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac360d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac361d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac36390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac36490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac36c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac3d3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiCodeRate')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiCodeRate' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac3d750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac3db90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac46050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac46190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac46290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac46390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac46790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac468d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac46c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiModulationClass')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiModulationClass' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac4e110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac4e590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac4e9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac4eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac4ec10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac4ed10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac55150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac55290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac55610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac55ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac55f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac5f090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac5f490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac5f5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac5f9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiModeFactory const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiModeFactory const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac5fe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac662d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac66410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac66510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiModulationClass')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiModulationClass' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac66610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac66a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac66b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiModulationClass')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiModulationClass' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac66c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac66c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiCodeRate')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiCodeRate' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac66ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac66ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac71450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac71d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac71f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac77150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PcapHelper::DataLinkType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PcapHelper::DataLinkType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac77710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac77b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac77c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac77d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac80290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac803d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac804d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac805d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac80790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac80890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac80a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac80b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac80d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac80e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac80fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac87110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac872d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac873d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac87590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac87690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac87850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac87950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac87e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyHelper::SupportedPcapDataLinkTypes')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyHelper::SupportedPcapDataLinkTypes' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac87f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8d390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PcapFileWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PcapFileWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PcapFileWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8d6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8d890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8d890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8d990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8da90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8db90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8db90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduInfo' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8dd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::signalNoiseDbm')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::signalNoiseDbm' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac8de90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac95610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PcapFileWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PcapFileWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PcapFileWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac95950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac95b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac95b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac95c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac95d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac95e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac95e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduInfo' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac9c050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac9c790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac9cad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac9cad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac9cd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ac9cd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aca3410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aca3550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aca3810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aca3810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aca3910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyListener const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyListener const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acac2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acac710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acac850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acacf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acb3610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acb3cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acb3e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acbe4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acbeb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acbecd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acc7390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acc74d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acc75d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acc7c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10accf690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10accfa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acda110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStationState *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationState *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acda750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acda8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStationInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acdaf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ace4710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ace4b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ace4f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aced110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStationState const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationState const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aced850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acedc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acda750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acf5810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acf5e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acfd550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStationInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10acfdbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad04290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiModeList')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiModeList' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad048d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiModeList')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiModeList' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad04f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad0e590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad0ebd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad18250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad188d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad18f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad215d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad21cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad28490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad28590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad28690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad28790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad28890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad28990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad28a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad28b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad28c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad32050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad32490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad328d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad32d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad39190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad395d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad39a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad39e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad432d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad43710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad43850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad43c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad43d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad4b1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad4b310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad4b750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad4b890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad4bcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad4be10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad53250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad53390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad53790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad538d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad53d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad53e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad5c290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad5c3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::YansWifiChannelHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiChannelHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad5c810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad5cf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad650d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad651d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad652d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad65490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad65590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad65750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad65850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad65a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad65b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad65cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad65dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad65f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad6c0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad6c290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad6c390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad6c550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad6c650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad6cb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::YansWifiChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::YansWifiChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad6ce50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad6ce50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::YansWifiChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::YansWifiChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad72490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::YansWifiChannelHelper')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiChannelHelper' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad727d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad72c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad72d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad72e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad72f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7d190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7d290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7d450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7d550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7d710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7d810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7d9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7dad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7dc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7dd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad7df50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad82090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad82250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad82350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::YansWifiPhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiPhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad82850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::YansWifiPhyHelper')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiPhyHelper' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad82f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad89450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::YansWifiChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::YansWifiChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad89790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad89a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad89bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad90190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad90390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad90550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::empty const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::empty const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad90e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad98290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad98450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad98610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad987d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad98990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad98b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad98d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad98ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad9f450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long double' => failure
'long double' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:5489: Warning: exception TypeLookupError(['long double'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10ad9f790>
  cls.add_constructor([param('long double', 'v')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad9f910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long int' => success ((<class 'pybindgen.typehandlers.inttype.LongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ad9fcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long long int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long long int' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ada8110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ada8550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ada8950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ada8d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb1290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb1390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb1750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb1b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb1ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb9350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb9790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb98d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb9cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adb9e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t::impl_type const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t::impl_type const' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adc3290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adc3a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adc3e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adcb550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::signalNoiseDbm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::signalNoiseDbm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adcbf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10add4350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10add4990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Chunk const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Chunk const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10addd3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10addd810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10addd950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ade60d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ade6550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:5575: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adee090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adee4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adee610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adeea50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adeee90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adf6350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:5603: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adf6ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adf6c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HigherLayerTxVectorTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HigherLayerTxVectorTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae00110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adf6510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10adf6350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae00b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae00c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae0a090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae0a4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae0a910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae0ad50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae121d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae12610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:5652: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae12d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae12e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::InternetStackHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InternetStackHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae12690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae1b850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae1b990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae1ba90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae1be90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae1bfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae23410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae23710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae23990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae23b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae23e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae2c350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae2c7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae2c910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae2cd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae2ce90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae33310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae33450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae33890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae339d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae33dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4RoutingHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4RoutingHelper const &' => failure
'ns3::Ipv4RoutingHelper const &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:5712: Warning: exception TypeLookupError(['ns3::Ipv4RoutingHelper &'],) in wrapper public: retval? ???::SetRoutingHelper (params?);
  [param('ns3::Ipv4RoutingHelper const &', 'routing')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae3b0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6RoutingHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6RoutingHelper const &' => failure
'ns3::Ipv6RoutingHelper const &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:5716: Warning: exception TypeLookupError(['ns3::Ipv6RoutingHelper &'],) in wrapper public: retval? ???::SetRoutingHelper (params?);
  [param('ns3::Ipv6RoutingHelper const &', 'routing')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae3b390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae3b4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae3b8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae3ba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae3bb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae3bc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae44090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae44410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae44410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae446d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae446d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae447d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae44e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae33ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae33ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ade66d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae33f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ade6610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae4c150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae4c290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae4c550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae4c550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae4c650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae4cc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae4cdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae540d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae4cf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae541d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae54850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae54f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae5d110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae5d550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::DscpType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::DscpType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae5d690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae5dad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::EcnType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::EcnType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae5dc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae64090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae644d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::DscpType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::DscpType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae64910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::EcnType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::EcnType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae64d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae6b250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae6b690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae6bad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae6bf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae74390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae747d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae74c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae7c090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae7c4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae7c910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae7cd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae851d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae85610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae85a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:5855: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae8e210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae8e350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae8e790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae859d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae8ead0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae8ef10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::DscpType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::DscpType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae98090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae984d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::EcnType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::EcnType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae98610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae98a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae98b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ae98f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea0110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea0510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea0950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea0d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea7210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea7350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea7790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea78d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea7cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aea7e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aeb0290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aeb03d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aeb0810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aeb0950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aeb0d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aeb7510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aeb7650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aeb7a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Header::DscpType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Header::DscpType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aeb7bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aec0050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Header::DscpType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Header::DscpType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aec0490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aec0910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aec0d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aec81d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aec8610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aec8a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aec8e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aed1310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aed1750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aed1b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aed1fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:5993: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aed8790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aed88d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aed8d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aed8e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee3290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Header::DscpType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Header::DscpType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee33d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee3810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee3950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee3d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee3e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee9310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee9450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee9890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee99d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee9dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aee9f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aef4350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aef4490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtAddBaRequestHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtAddBaRequestHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aef48d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aefc050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aefc190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aefc5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aefca10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aefce50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af032d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af03710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af03b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af03f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af0e410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af0e850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af0ec90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6092: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af143d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af14550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af14990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af14ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af14ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af1d050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af1d450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af1d890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af0ee10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af0ed50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af250d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af25210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af25610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af25750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtAddBaResponseHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtAddBaResponseHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af25b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af2e310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af2e450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af2e890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af2ecd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af36150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::StatusCode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::StatusCode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af36590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af369d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af36e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af3f290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af3f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af3fb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af3ff50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6187: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af48690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af48810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af48c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af48d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af511d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af51310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af51710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af51950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af51d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::StatusCode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::StatusCode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af51ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af5a350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af5a490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af5a890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af5a9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtAssocRequestHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtAssocRequestHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af5ae10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af61590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af616d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CapabilityInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CapabilityInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af61b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af61f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af69410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aed8190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af69a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af69ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af73350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af73790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af73bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af7b090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6282: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af7b790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af7b910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af7bd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CapabilityInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CapabilityInformation' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af7be90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af82310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af73fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af82650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af82790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af82b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af82cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af8b110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af8b250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af8b650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af8b790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtAssocResponseHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtAssocResponseHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af8bc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af92390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af924d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CapabilityInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CapabilityInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af92910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSet')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSet' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af92d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af9a250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af9a690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperations')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperations' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af9aad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10af9af10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afa4390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::StatusCode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::StatusCode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afa47d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afa4c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afab090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afab4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afab950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6381: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afb6090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afb6210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afb6650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CapabilityInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CapabilityInformation' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afb6790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afb6bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSet')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSet' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afb6d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afbe190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformation' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afbe2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afbe6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afbe810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afbec10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperations')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperations' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afbed50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afc6190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::StatusCode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::StatusCode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afc62d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afc66d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afc6810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afc6c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afc6d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtDelBaHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtDelBaHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afcd210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afcd950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afcda90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afcded0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afd6350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afd6790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afd6bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afde050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afde490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6460: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afde5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afde550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afdef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afe73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afe7850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afe7990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtProbeRequestHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtProbeRequestHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aff0110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aff0550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aff0690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aff0ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aff0f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aff8390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aff87d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10aff8c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b001090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0014d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b001950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6529: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b00b090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b00b210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b00b650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b00b790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b00bb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b00bcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b014110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b014250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b014650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b001a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtProbeResponseHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtProbeResponseHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b014a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b01c190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b01c2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b01c710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CapabilityInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CapabilityInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b01cb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DsssParameterSet')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DsssParameterSet' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b01cfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSet')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSet' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b024490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b024910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b024d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperations')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperations' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b02c1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b02c610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b02ca50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b02ce90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b035310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b035750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b035b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b035fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b03d490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6636: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b03db90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b03dd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0461d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b046310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b046510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CapabilityInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CapabilityInformation' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b046650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b046a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DsssParameterSet')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DsssParameterSet' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b046bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b04d050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSet')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSet' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b04d190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b04d5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformation' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b04d710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b04db10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b04dc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b055090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperations')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperations' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0551d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0555d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b055710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b055b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b055c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b05e090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b05e1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NqosWaveMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NqosWaveMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b05e650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NqosWaveMacHelper')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NqosWaveMacHelper' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b05ed90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b068f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0700d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b070e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b076090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b076190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b076c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b076f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b07c290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Object::AggregateIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object::AggregateIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b07c710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b07cb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b085310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b085790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b085bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Object const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b08c0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10afabb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b08cd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b094790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Object::AggregateIterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object::AggregateIterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b09e210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b09e910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b09ef10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0a7290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0a79d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0a7e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0ae290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0ae6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0ae810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_Ios_Openmode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_Ios_Openmode' => success ((<class 'ns3modulegen_core_customizations.IosOpenmodeParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0ae990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0aed90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0b7210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0b7350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0b7450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0b7550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0b7950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0b7a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0b7d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bf090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bf1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bf2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bf610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bf890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bfa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bfb10>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6817: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Write (params?);
  [param('ns3::Time', 't'), param('uint8_t const *', 'buffer'), param('uint32_t', 'length')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bfd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bfd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0c81d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0c8610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0c8a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0c8e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0d0310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0d0750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0d0b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::QosWaveMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::QosWaveMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0bf890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::QosWaveMacHelper')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::QosWaveMacHelper' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0da510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0da990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0daad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0dabd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0dacd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0dae90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0daf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e29d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e2f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e9090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e9250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e9350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e9510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e9610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e97d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0e98d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0f0090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0f07d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0f0910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0f0d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0f6190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0f62d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0f66d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0f6b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0ff250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RngStream *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RngStream *' => failure
'ns3::RngStream *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6909: Warning: exception TypeLookupError(['ns3::RngStream *'],) in wrapper protected: retval? ???::Peek (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b0ffa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b107090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1074d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::RandomVariableStream >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::RandomVariableStream >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RandomVariableStream *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b107b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b107e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1112d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1119d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::AttributeAccessor, ns3::empty, ns3::DefaultDeleter< ns3::AttributeAccessor > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::AttributeAccessor, ns3::empty, ns3::DefaultDeleter< ns3::AttributeAccessor > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b119410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b119b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter< ns3::AttributeChecker > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter< ns3::AttributeChecker > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1212d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1219d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter< ns3::AttributeValue > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter< ns3::AttributeValue > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b12a190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b12a810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::CallbackImplBase, ns3::empty, ns3::DefaultDeleter< ns3::CallbackImplBase > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::CallbackImplBase, ns3::empty, ns3::DefaultDeleter< ns3::CallbackImplBase > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b12af90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1346d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::ChannelCoordinationListener, ns3::empty, ns3::DefaultDeleter< ns3::ChannelCoordinationListener > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::ChannelCoordinationListener, ns3::empty, ns3::DefaultDeleter< ns3::ChannelCoordinationListener > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b134e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b13b510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::EventImpl, ns3::empty, ns3::DefaultDeleter< ns3::EventImpl > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::EventImpl, ns3::empty, ns3::DefaultDeleter< ns3::EventImpl > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b13bc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b144350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Hash::Implementation, ns3::empty, ns3::DefaultDeleter< ns3::Hash::Implementation > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Hash::Implementation, ns3::empty, ns3::DefaultDeleter< ns3::Hash::Implementation > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b144ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b14a210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::InterferenceHelper::Event, ns3::empty, ns3::DefaultDeleter< ns3::InterferenceHelper::Event > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::InterferenceHelper::Event, ns3::empty, ns3::DefaultDeleter< ns3::InterferenceHelper::Event > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b14a990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b155050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Ipv4MulticastRoute, ns3::empty, ns3::DefaultDeleter< ns3::Ipv4MulticastRoute > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Ipv4MulticastRoute, ns3::empty, ns3::DefaultDeleter< ns3::Ipv4MulticastRoute > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1557d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b155ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Ipv4Route, ns3::empty, ns3::DefaultDeleter< ns3::Ipv4Route > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Ipv4Route, ns3::empty, ns3::DefaultDeleter< ns3::Ipv4Route > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b15d690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b15dd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::NetDeviceQueue, ns3::empty, ns3::DefaultDeleter< ns3::NetDeviceQueue > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::NetDeviceQueue, ns3::empty, ns3::DefaultDeleter< ns3::NetDeviceQueue > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1664d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b166b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::NixVector, ns3::empty, ns3::DefaultDeleter< ns3::NixVector > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::NixVector, ns3::empty, ns3::DefaultDeleter< ns3::NixVector > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b170310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b170990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::OutputStreamWrapper, ns3::empty, ns3::DefaultDeleter< ns3::OutputStreamWrapper > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::OutputStreamWrapper, ns3::empty, ns3::DefaultDeleter< ns3::OutputStreamWrapper > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b17a150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b17a850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Packet, ns3::empty, ns3::DefaultDeleter< ns3::Packet > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Packet, ns3::empty, ns3::DefaultDeleter< ns3::Packet > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b17afd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b182690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::QueueItem, ns3::empty, ns3::DefaultDeleter< ns3::QueueItem > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::QueueItem, ns3::empty, ns3::DefaultDeleter< ns3::QueueItem > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b182e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b18a4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::TraceSourceAccessor, ns3::empty, ns3::DefaultDeleter< ns3::TraceSourceAccessor > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::TraceSourceAccessor, ns3::empty, ns3::DefaultDeleter< ns3::TraceSourceAccessor > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b18ac50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b192390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::WifiInformationElement, ns3::empty, ns3::DefaultDeleter< ns3::WifiInformationElement > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::WifiInformationElement, ns3::empty, ns3::DefaultDeleter< ns3::WifiInformationElement > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b192b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b19b250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Socket const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b19b6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b19be50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b19bf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1a57d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1a5e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1ae5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1ae8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1aee50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1b7590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1b76d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1c0050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1c0250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1c0250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1c0650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1c0ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Socket::SocketErrno')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket::SocketErrno' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1c7250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1c7990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1c7e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1d0550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1d0c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1d9250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1d9850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1d9990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1e1090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1e14d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1e1b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1e1cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Socket::SocketType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket::SocketType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1eb3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1ebad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1f41d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1f4650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1f4790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1f4b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1f4cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Socket::Ipv6MulticastFilterMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket::Ipv6MulticastFilterMode' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1f4dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::Ipv6Address >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::Ipv6Address >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1f4dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1fe650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1fe790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b1fedd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2054d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b205910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b205d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b20f1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b20f610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b20fa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b217350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b217390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b217490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b217d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b21f090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b21f1d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7332: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Recv (params?);
  [param('uint8_t *', 'buf'), param('uint32_t', 'size'), param('uint32_t', 'flags')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b21f490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b21f4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b21f590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b21f250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b21fd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b21fd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b228210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b228350>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7345: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::RecvFrom (params?);
  [param('uint8_t *', 'buf'), param('uint32_t', 'size'), param('uint32_t', 'flags'), param('ns3::Address &', 'fromAddress')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b228450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b228750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b228750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b228e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b22f150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b22f450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b22f590>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7358: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Send (params?);
  [param('uint8_t const *', 'buf'), param('uint32_t', 'size'), param('uint32_t', 'flags')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b22f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b22f9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b22f9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b22fad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b238290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2383d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7367: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::SendTo (params?);
  [param('uint8_t const *', 'buf'), param('uint32_t', 'size'), param('uint32_t', 'flags'), param('ns3::Address const &', 'address')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b22f650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b22f510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b238990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2403d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b240510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b240b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b240cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b247390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b247e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b247f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b24f610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2550d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b255210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b255c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b255d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b25e1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b25e310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b25e710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b25e850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b25ec90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b25edd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2664d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b266610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b266c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b266dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b26f210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b26f350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b26f790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b26f8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b26fcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b26fe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b276250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b276390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b276dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b276f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b27e350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b27e490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b27eed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2855d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b285c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b290710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b290e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b298650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b298e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2a1650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2a1790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2aa050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2aa850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2b2090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2b21d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2b2990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2ba1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2ba4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2ba4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2bad50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2c2590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2c26d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketIpTosTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketIpTosTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2c2e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2c9610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2c9750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2c9b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2c9f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2d3410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2d3850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2d3c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7550: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2db3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2db550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2db990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2dbad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketIpTtlTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketIpTtlTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2dbf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2e4690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2e47d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2d3d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2e4b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2e4fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2eb450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2eb890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7596: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2ebf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2f4150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2f4590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2f46d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketIpv6HopLimitTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketIpv6HopLimitTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2f4b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2fb290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2fb3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2eb950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2fba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b2fbe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3032d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b303710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7642: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b303e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b303f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b30d3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b30d510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketIpv6TclassTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketIpv6TclassTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b30d950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3140d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b314210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b314410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b314850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b314c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b31f110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b31f550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7688: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b31fc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b31fdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b327210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b327350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketPriorityTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketPriorityTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b327790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b31f690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b31f610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b330250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b330690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b330ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b330f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b339390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7734: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b339a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b339c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b341050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b341190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketSetDontFragmentTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketSetDontFragmentTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3415d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b339450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b341c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b349050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b349490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3498d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b349d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b351190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3515d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b351a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:7788: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b35b150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b35b2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b35b650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.LongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b351bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b35b790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b35b910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.LongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b35ba90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b35bc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b362190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b362610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b362a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long int' => success ((<class 'pybindgen.typehandlers.inttype.LongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b362e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long long int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long long int' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b36a290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b36a710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b36ab50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b36afd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b374510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3749d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TimeWithUnit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TimeWithUnit' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b374e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b374f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b37b390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b37b4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b37b990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b37bad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b37bfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b383150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b383310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b383710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b383850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b383950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b383d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b383ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b383fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b38b450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b38b8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b38bd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3921d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b392650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b392ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b392f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b39a390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b39a810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b39ac50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3a40d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3a4510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3a49d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3a4e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ab310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ab790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3abc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3b4090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3b44d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3b4950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3b4d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3bd210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3bd350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3bd750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3bdbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3bdd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3c5150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3c5290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3c56d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3c5810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TraceSourceAccessor const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3c5c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ce410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ce550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ce690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ce790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3cec50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ced90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ceed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3d53d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3d5510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3d5650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3d5750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3d5c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3d5d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3d5e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3dd710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ddb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ddcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3e3150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3e3590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3e39d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:8046: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ee190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ee2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3ee510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3eec50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3f60d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3f6510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3f6950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3f6a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3f6b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3f6c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3fe0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3fe210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3fe310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3fe410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3fe810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b3feed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b408590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b408cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b411150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b411590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4116d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4117d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b411bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b411d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b411e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b418250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b418910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VendorSpecificActionHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VendorSpecificActionHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b418fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b424710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b424850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b424c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b42b110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b42b550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b42b9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b42be10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b434290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:8174: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b434990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b434b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b434d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b434e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VsaManager const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VsaManager const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b43d350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b43da90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b43ded0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b444350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b444490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b444890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4449d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b444e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VsaInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VsaInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b444fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b44e4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WaveNetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WaveNetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveNetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b44e7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b44ead0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::Packet const >, ns3::Address const &, unsigned int, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::Packet const >, ns3::Address const &, unsigned int, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b44ec10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b455790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b455e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WaveBsmStats const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveBsmStats const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b45d550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b45dcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b45de10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b466290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4663d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b466810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b466950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b466d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4701d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b470650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b470790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b470b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b470fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b478450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4788d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b478a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b478e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4812d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b481410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b481850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b481990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b481d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b488250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b488390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b488790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4888d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4889d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b488e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b488f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4903d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b490510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b490910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b490a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b490b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b490f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b498110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b498510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b498c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a10d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a1510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a1950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a1a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a1b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a1c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a80d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a8210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a8310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a8410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a8810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4a8ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Wifi80211pHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Wifi80211pHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4b15d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Wifi80211pHelper')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Wifi80211pHelper' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4b1d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4ba1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4ba610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4ba790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4ba950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4bab10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4c2210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4c2350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4c2a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4ca1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4ca310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader::ActionValue')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader::ActionValue' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4ca750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader::CategoryValue')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader::CategoryValue' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4cab90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4cafd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4d3450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4d3890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4d3cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:8427: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4dc410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4dc590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4dc9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader::CategoryValue')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader::CategoryValue' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4dcb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader::ActionValue')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader::ActionValue' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4dcb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader::ActionValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader::ActionValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4d3e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader::BlockAckActionValue')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader::BlockAckActionValue' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4e2550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader::MeshActionValue')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader::MeshActionValue' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4e2b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader::MultihopActionValue')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader::MultihopActionValue' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4ec250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiActionHeader::SelfProtectedActionValue')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiActionHeader::SelfProtectedActionValue' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4ec8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElement const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElement const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4f62d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4f6710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4f6890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4f6cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4f6e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4fc2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4fc410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4fc550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4fc950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b4fcd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b504210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b504650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:8493: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b504d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b504f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b50e390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b50e4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMac const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMac const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b50ec90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5045d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b516090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5164d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5167d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5167d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5168d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b51f050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b51f350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b51f350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b51f9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5280d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5287d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b528e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b530610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b530cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5393d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b539a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b539ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b542350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b542a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b54a190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b54a850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b54af50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b555690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b555d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b55c3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiRemoteStationManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiRemoteStationManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b55cb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b567110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b567410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b567710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b567a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b567d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b56f090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b56f390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b56f690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b56f9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b56fcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b56ffd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5766d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b576810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b576e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b576fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b57f690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b57f7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b57fe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b57ff90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b588650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b588790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b588e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b588f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b591610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::Mac48Address, ns3::Mac48Address, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::Mac48Address, ns3::Mac48Address, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b591750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b59a410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b59a550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5a2150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5a2290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5a2e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5a2f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5aa3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5aa510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5aabd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5b32d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5b3410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5b3ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5b3c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5bc2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5bc410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5bcad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5bcc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5c4310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5c4450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5c4b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5c4e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5cd3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiRemoteStationManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiRemoteStationManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5cd690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5cdc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5d6350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Dcf >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Dcf >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Dcf *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5d6650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5d6650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5d6750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5d6850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AcIndex')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AcIndex' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5d6950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5df110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5df250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5df910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5e6090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5e61d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5e6610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5e6a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5e6e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5f0310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5f0750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5f0b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5f0fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader::QosAckPolicy')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader::QosAckPolicy' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5f8450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5f8890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5f8cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5ff150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5ff590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5ff9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b5ffe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b60a290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b60a6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b60ab10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b60af90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b613490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6138d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b613d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b61b190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b61b5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b61ba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b61be50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6232d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b623710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b623b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b623f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b62c410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b62c850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b62cc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b634110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b634550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b634990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b634dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b63d250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b63d690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b63dad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b63df10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b645390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6457d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b645c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b64e090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b64e4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b64e910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b64ed50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6571d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b657610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b657a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:9010: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b65f190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b65f310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b65f750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b65fb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b65fcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b669110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b669250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b669650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b669790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b669b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b669cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b671110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b671550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b671990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b671dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b657b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b67a390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b67a7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b67ac10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b682090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6824d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b682610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b682a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b682b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b682fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b68a150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b68a550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b68a990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b68add0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b692250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b692690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b692ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b692f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b69d390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b69d7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader::QosAckPolicy')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader::QosAckPolicy' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b69d910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b69dd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6a5190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6a55d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6a5a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6a5e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6ad2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6ad710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6adb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6adf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6b7450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6b7590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6b79d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6b7b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6b7f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6be090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6be490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6be910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6bea50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6bee50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6bef90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6c73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacQueue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacQueue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6c7850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cf190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cf1d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:9194: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::Dequeue (params?);
  [param('ns3::WifiMacHeader *', 'hdr')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cf590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cf5d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:9198: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::DequeueByTidAndAddress (params?);
  [param('ns3::WifiMacHeader *', 'hdr'), param('uint8_t', 'tid'), param('ns3::WifiMacHeader::AddressType', 'type'), param('ns3::Mac48Address', 'addr')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cf950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cf990>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:9202: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::DequeueFirstAvailable (params?);
  [param('ns3::WifiMacHeader *', 'hdr'), param('ns3::Time &', 'tStamp'), param('ns3::QosBlockedDestinations const *', 'blockedPackets')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cfb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cfe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cfe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cf8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6cf1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6db150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6db590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6db6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader::AddressType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader::AddressType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6db7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6db7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6dbcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6e1150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6e1590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6e1b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6e1bd0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:9241: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::Peek (params?);
  [param('ns3::WifiMacHeader *', 'hdr')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6e1f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6e1f50>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:9245: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::PeekByTidAndAddress (params?);
  [param('ns3::WifiMacHeader *', 'hdr'), param('uint8_t', 'tid'), param('ns3::WifiMacHeader::AddressType', 'type'), param('ns3::Mac48Address', 'addr'), param('ns3::Time *', 'timestamp')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6eb2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6eb310>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:9249: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::PeekFirstAvailable (params?);
  [param('ns3::WifiMacHeader *', 'hdr'), param('ns3::Time &', 'tStamp'), param('ns3::QosBlockedDestinations const *', 'blockedPackets')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6eb490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6e1f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6e1f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6eb5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6eb110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6eb7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6eb910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6ebd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6ebe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6f1290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6f1d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader::AddressType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader::AddressType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6f1e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_List_iterator< ns3::WifiMacQueue::Item >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_List_iterator< ns3::WifiMacQueue::Item >' => failure
'std::_List_iterator< ns3::WifiMacQueue::Item >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:9275: Warning: exception TypeLookupError(['std::_List_iterator< ns3::WifiMacQueue::Item >'],) in wrapper protected: retval? ???::GetAddressForPacket (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhy const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6f1f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6f9810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b6f9950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b701090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7011d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b701550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b701690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b701790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b701b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b701cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b701dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b70a490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b70a5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b70a6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b70a7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b70a7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b70acd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b70ae10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b70af10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b711050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b711050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b711250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b711250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7116d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b711850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b711f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b719090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b719490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7195d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b719a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b719b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b719c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b719c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b719e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7202d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b720410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b720a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b729090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b729650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b729d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b731410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b731ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b73e390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b73e6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b73eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b73ef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7463d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b746810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b746c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7500d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b750510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b750950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b750d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b757210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b757650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b757a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b757ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ErrorRateModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ErrorRateModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErrorRateModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b761510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b761850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b761f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b769610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b769cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b770150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b770590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7709d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b770e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b77a290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b77a6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b77ab10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b77af50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7843d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b784810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b784c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b78b0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b78b510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b78b950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b78bd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b794210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b794650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b794a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b794ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b79d350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b79d790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b79dbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7a7050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7a7490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7a78d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7a7d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7af190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7af5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7afa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7afe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7b72d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7b7710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7b7850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7b7c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7be350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7bea50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7beb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiModeList')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiModeList' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7c82d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7c8410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7c8c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7c8fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7d1150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7d1850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7d1f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7d9650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7d9d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7e1410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7e1ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7ea1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7ea610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7eaa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7eae90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7f4310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7f4750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7f4b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7f4fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7fd450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7fd890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7fdcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b806150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b806590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8069d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b806e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b80f290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b80f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b80fb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b80ff50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8183d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b818810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b818c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8210d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b821510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b821950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b821a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b821b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b821c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b821c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8271d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b827310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b827410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b827510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b827510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b827710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b827710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b827b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b827d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b827e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b82f250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b82f390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b82f490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b82f490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b82f990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b82fad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b82fed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b838050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b838050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b838550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b838690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b838790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b838b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b838cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b83f110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b83f250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b83f650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b83f790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b83fb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b83ffd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b848450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b848b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b84f250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b84f910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b85a050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b85a850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b85af10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b863610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b863a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b86c150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b86c810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b86cc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8740d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b874510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b874950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b874d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b87c210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b87c650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b87ca90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b87ced0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b886350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b886790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8868d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b886cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b886e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b88d4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b88d610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b88dc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b896390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b896a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8a1150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8a1810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8a1ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8aa5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8aac90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8aadd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduInfo' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::signalNoiseDbm')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::signalNoiseDbm' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8b2f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8bc250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8bc250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8bc350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8bc450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8bc550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8bc550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduInfo' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8bc750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8bcb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8bce50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8c3190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8c3490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8c3790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8c3a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8c3d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8cb0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8cb3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8cb6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8cb9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8cbcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8cbfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8d4150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8d4550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyListener *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8d4690>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10062: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::RegisterListener (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8d4dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8db290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8d4750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8d4750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8d45d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b70a410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b711e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b711e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b720850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b720850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b729bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b729c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b731890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b731850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b761d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b761e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b769b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7be2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7be990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7c8050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7c8810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ErrorRateModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ErrorRateModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErrorRateModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7d1790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7d9510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7d94d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7e1310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7e1390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7e1fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b7ea150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b84f150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b84f190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b84fe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b85a5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8634d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b863490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b86c710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b86c790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b88da50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b88da10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b896850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10146: Warning: exception TypeLookupError(['ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: virtual retval? ???::SetReceiveErrorCallback (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8db4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::WifiTxVector, ns3::WifiPreamble, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::WifiTxVector, ns3::WifiPreamble, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::WifiTxVector, ns3::WifiPreamble, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10151: Warning: exception TypeLookupError(['ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::WifiTxVector, ns3::WifiPreamble, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: virtual retval? ???::SetReceiveOkCallback (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8df090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8df1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8df5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8df710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8dfb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8dfc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8e6090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8e64d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8e6610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8e6a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8e6bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8ee050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8ee190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8ee5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8ee710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8eeb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyListener *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8eec50>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10191: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::UnregisterListener (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8f53d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8f5550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8f5990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8f5ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8f5e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8fd290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8fd410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8fd790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8fdb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8fdd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8fdcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8fdf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9040d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b904290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStationManager const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9046d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b904ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b904c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b90d050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b90d190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b90d590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b90d6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b90dad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b90dc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b915050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b915190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b915290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b915690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9157d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9158d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b915d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b915e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b915f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b91d390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b91d4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b91d5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b91d9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b91db10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b91dc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b926050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b926190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b926290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b926690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b926ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b926c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b926d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b92c150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b92c290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b92c690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b92c7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b92cbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b92cd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b92ce10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b934250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b934390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b934710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b934a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b934b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b934c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b93b090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b93b1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b93b2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b93b650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b93b950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b93bd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b943210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b943650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b943790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b943890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b943c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b943c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b94b050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b94b190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b94b290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b94b610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b94b610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b94ba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b94be50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b94bf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStationInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9543d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b954550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b954950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b954d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b95c210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b95c650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b95ca90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b95ced0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b965050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b965450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b965890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStationManager::ProtectionMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager::ProtectionMode' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b965cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b96d150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b96d590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b96d6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b96d7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b96db50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b96de50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9762d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b976410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b976810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b976c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b976d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b97d1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b97d610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b97da50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b97de90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b986310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b986450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b986850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b986990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b986d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b986ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b986fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b990390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b990390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b990790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9908d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b990cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b990e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b997250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b997390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b997490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b997810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b997b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b997c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b997d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b99f110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b99f410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b99f550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b99f650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b99f9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b99f9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b99fdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b99ff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9a7050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9a73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9a76d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9a7810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9a7910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9a7c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9a7f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9af110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9af510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9af650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8a1510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8a1650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8db690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b8db4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9afd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9afe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9aff50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9b9090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9b9190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9b9290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9b9390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9b9790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9b98d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9b99d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9b9e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9b9fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c1110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c12d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c13d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c14d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c18d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c1a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c1b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c1fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c8150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c8250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c8710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c8850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c8950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c8e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9c8f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d0090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d0250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d0350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d0450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d0850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d0990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d0a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d0c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d0d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d7190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d75d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d7710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d7a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9d7c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9df050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9df190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9df590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9df6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9dfd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9dfed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9e8310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9e8450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9e8850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStationManager::ProtectionMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager::ProtectionMode' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9e8990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9e8d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9e8ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9ef350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9ef490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9ef8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9efa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9efe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9eff90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9f73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9f7510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9f7b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiMac >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiMac >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMac *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9f7e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba00450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba00750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba00cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba0a150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba0ab50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba0ac90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba124d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba12610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba12e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba12f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba1b790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba1b8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba24110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba24250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiMac >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiMac >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMac *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba24c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba2c2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba2c410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba2c5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba2cd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba2ce50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba33690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba337d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba33fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba3d150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba3d950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba3da90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba442d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba44410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba445d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba44d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba44e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba4d850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba4ded0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba57050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba57850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba57990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba5e1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba5e310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba5eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba5ec50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba5ee10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba67590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba676d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba67ed0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10706: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper private: virtual retval? ???::DoCreateStation (params?) const = 0;
  is_pure_virtual=True, is_const=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba6f590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba6f710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba6f810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba6fb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba6fd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba6fe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba6f050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba67e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba76250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba765d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba76750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba76850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba76bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba76d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba76e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba7f210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba7f390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba7f490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba7f810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba7f990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba7fa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba7fe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba7ff90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba870d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba87450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba875d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba876d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba87a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba87bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba87cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba8f090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba8f210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba8f310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba8f690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba8f810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba8f910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba8fc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba8fe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba8ff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba962d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba96450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba96550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba968d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba96a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba96b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba96ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba9f090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba9f190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba9f510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba9f690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba9f790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba9fb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba9fc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba9fd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baa6150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baa62d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10801: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoGetDataTxVector (params?) = 0;
  is_pure_virtual=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baa6a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baa6bd0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10806: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoGetRtsTxVector (params?) = 0;
  is_pure_virtual=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baaf350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baaf510>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10811: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoNeedDataRetransmission (params?);
  visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baaff50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bab8110>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10816: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoNeedFragmentation (params?);
  visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baaf5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baaf310>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10821: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoNeedRts (params?);
  visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bab8e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bab8f90>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10826: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoNeedRtsRetransmission (params?);
  visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10babfa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10babfb90>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10831: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoReportAmpduTxStatus (params?);
  visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bac6710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bac6890>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10836: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoReportDataFailed (params?) = 0;
  is_pure_virtual=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bace050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bace1d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10841: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoReportDataOk (params?) = 0;
  is_pure_virtual=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bab8f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bab8ed0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10846: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoReportFinalDataFailed (params?) = 0;
  is_pure_virtual=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba67150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba67490>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10851: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoReportFinalRtsFailed (params?) = 0;
  is_pure_virtual=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba677d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba67610>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10856: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoReportRtsFailed (params?) = 0;
  is_pure_virtual=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10b9f7910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba00250>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10861: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoReportRtsOk (params?) = 0;
  is_pure_virtual=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba0a510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiRemoteStation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba0a610>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10866: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper private: virtual retval? ???::DoReportRxOk (params?) = 0;
  is_pure_virtual=True, visibility='private', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bacea90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::YansWavePhyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWavePhyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba003d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::YansWavePhyHelper')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWavePhyHelper' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba67a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bab8190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bacef10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bacef10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba57210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba57210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba57890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba579d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba57c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba57c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba57d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::YansWifiPhy const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiPhy const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba63450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba63d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba50090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba504d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyListener *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba50610>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10915: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::RegisterListener (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba50d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba15210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba15510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba15510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba15610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba15a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba15d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba15d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba15e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba15e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba44910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::YansWifiChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::YansWifiChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba44750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba44890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10939: Warning: exception TypeLookupError(['ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: virtual retval? ???::SetReceiveErrorCallback (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba12710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::WifiTxVector, ns3::WifiPreamble, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::WifiTxVector, ns3::WifiPreamble, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::WifiTxVector, ns3::WifiPreamble, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10944: Warning: exception TypeLookupError(['ns3::Callback< void, ns3::Ptr< ns3::Packet >, double, ns3::WifiTxVector, ns3::WifiPreamble, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: virtual retval? ???::SetReceiveOkCallback (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba20750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba20bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba20ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba20ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba20fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba20fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::InterferenceHelper::Event >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::InterferenceHelper::Event >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InterferenceHelper::Event *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10953: Warning: exception TypeLookupError(['ns3::Ptr< ns3::InterferenceHelper::Event >', 'ns3::InterferenceHelper::Event *'],) in wrapper public: retval? ???::StartReceivePacket (params?);
  [param('ns3::Ptr< ns3::Packet >', 'packet'), param('ns3::WifiTxVector', 'txVector'), param('ns3::WifiPreamble', 'preamble'), param('ns3::mpduType', 'mpdutype'), param('ns3::Ptr< ns3::InterferenceHelper::Event >', 'event')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba20d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba38150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba20f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba38250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba38450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba38450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba38450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba38a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyListener *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba38b90>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:10962: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::UnregisterListener (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba49310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba49490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba49810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba389d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba383d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba49ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba16290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba16710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba16850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba16c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba16d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bad41d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bad4890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bad4f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10badc690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10badcad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10badcf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bae5090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bae5190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bae5590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bae56d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bae57d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bae5bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baeb2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AmpduSubframeHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AmpduSubframeHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baeb990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baf3110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baf3250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baf3690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baf3ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10baf3f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bafc390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bafc7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bafcc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb03090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb034d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:11100: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb03bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb03d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb0d210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb0d350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb0d790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb0d8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb03650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb034d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb14050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AmsduSubframeHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AmsduSubframeHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb144d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb14c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb14d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb1d1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb1d610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb1da50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb1de90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb24310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb24750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb24b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:11168: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb2f2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb2f450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb2f890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb2f9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb2fdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb2ff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb38350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb38490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Application const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Application const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb388d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb41210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb41550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb24c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb41a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb41d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb41ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb48310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb48450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb48850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb502d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb50cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb5b390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeAccessor const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeAccessor const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb5ba50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb651d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb65310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb654d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb65950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb65d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb6c210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb6c350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb6c490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb6c990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb76110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb76250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb76710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb76850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb76a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb7c090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb7c590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb7c610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb7ca90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb7ced0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb85350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb857d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb8e110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba44950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba44b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba12a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ba12550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb8e490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BooleanChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BooleanChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb8ead0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BooleanValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BooleanValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb8ef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb96710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb96c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bb96f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bba0110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bba0450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bba0750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bba0bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bba0f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bba52d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bba5410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BsmApplication const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BsmApplication const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bba5890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bba5fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbae150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbae550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbae990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbaead0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbaec50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbaed50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbaee50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbaef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbb7090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< double >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbb7190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WaveBsmStats >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WaveBsmStats >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveBsmStats *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbb7510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int > *' => success ((<class 'pybindgen.container.ThisContainerPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbb7510>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:11386: Warning: exception TypeConfigurationError('transfer_ownership parameter was not given',) in wrapper public: retval? ???::Setup (params?);
  [param('ns3::Ipv4InterfaceContainer &', 'i'), param('int', 'nodeId'), param('ns3::Time', 'totalTime'), param('uint32_t', 'wavePacketSize'), param('ns3::Time', 'waveInterval'), param('double', 'gpsAccuracyNs'), param('std::vector< double >', 'rangesSq'), param('ns3::Ptr< ns3::WaveBsmStats >', 'waveBsmStats'), param('std::vector< int > *', 'nodesMoving'), param('int', 'mode'), param('ns3::Time', 'txDelay')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbaebd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbb70d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbae9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbc0110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbc0ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackImplBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackImplBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbca290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbca6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbcab10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::CallbackImplBase const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::CallbackImplBase const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackImplBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbcae90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbd31d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbd3310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbd3490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbd3990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbd3f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbdb310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbdb450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbdb790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbdba90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbdbe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbe3150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbe3290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Channel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Channel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbe36d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbec090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbec090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbec7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbecc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbf2350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ChannelCoordinationListener const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelCoordinationListener const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbf2ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbf2ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbfd050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbfd450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbfd590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbfd690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbfda90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bbfdbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ChannelCoordinator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelCoordinator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc05050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc05790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc05bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc0d050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc0d490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc0d8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc0dd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc15190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc152d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc156d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc15810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc15c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc1f090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc1f4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc1f910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc1fa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc1fe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc1ff90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc283d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc28510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc28910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc28d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc28e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc2f2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc2f410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc2f810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc2f950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc2fd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ChannelCoordinationListener >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ChannelCoordinationListener >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelCoordinationListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc39050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc39350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc39490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc39890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc399d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc39dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc39f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc40350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc40790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ChannelCoordinationListener >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ChannelCoordinationListener >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelCoordinationListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc40a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc40d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc48450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ChannelManager const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelManager const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc48b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc51290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc516d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc51810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc51c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc51d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc59190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc592d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc596d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc59b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc59c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc61090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc61610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc61a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc61fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc6a150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc6a550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc6a690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc6aa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc6abd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ChannelScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc72050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ChannelAccess')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelAccess' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc72790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc727d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc72fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc7c450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc7c590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc7c990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc7cdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc7cf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc85350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc85490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc85890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc85cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc85e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc8c250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc8c690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WaveNetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WaveNetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveNetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc8c990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc8cf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SchInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SchInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc97090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc97550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc97690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc97a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc97bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc97cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc9f350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc9f490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc9f590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bc9fbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bca7290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bca73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bca74d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bca75d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bca7c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcaf650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcaf790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcafdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcb7550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcb7990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcb7ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcb7ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcc0050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcc0450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcc0b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CtrlBAckRequestHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CtrlBAckRequestHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcc8210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcc8950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcc8a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcc8ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcd3350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcd3790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcd3bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcdb050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcdb490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcdb8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcdbd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bce4190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bce45d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bce4a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:11898: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcec150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcec2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcec710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcec850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcecc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcecdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcf5250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcf5390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcf5790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BlockAckType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BlockAckType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcf58d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CtrlBAckResponseHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CtrlBAckResponseHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcf5d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcfd490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bce4990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const *' => failure
'uint16_t const *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:11936: Warning: exception TypeLookupError(['uint16_t *'],) in wrapper public: retval? ???::GetBitmap (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcfd950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcfdd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd05210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd05650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd05a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd05ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd0f350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd0f790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd0fbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd18050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd18190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bcfd8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd18550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd18990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd18ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd18ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd1f350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:12006: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd1fa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd1fed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd29050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd29490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd295d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd299d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd29b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd29c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd1f390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd29f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd30410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd30550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd30950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd30a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd30ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd38050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd38450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BlockAckType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BlockAckType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd38590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Dcf const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Dcf const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd38d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd40190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd40910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd4b050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd4b750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd4be50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd53310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd53450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd53b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd53c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd5a350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd5a490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd5ab50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd5ac90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DefaultChannelScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DefaultChannelScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd633d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ChannelAccess')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelAccess' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd63ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd63b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd6d350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd6d790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd6d8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd6dcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd6de10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd6df10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd74350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd74490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd74890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WaveNetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WaveNetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveNetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd74b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd7e150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd7e290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd7e390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd7e9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd7eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd7ec10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd86290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd86910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd86a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd86b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd86c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd8e2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd8e950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd8efd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd99150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd99790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bd99ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double *' => success ((<class 'pybindgen.typehandlers.doubletype.DoublePtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bda1050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bda1190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bda1590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bda1c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DoubleValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DoubleValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bda96d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double const &' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bda9b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdb4150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdb44d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdb4610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdb4950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdb4c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdbb110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdbb490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdbb790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double const &' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdbb8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DsssParameterSet const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DsssParameterSet const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdbbdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdc2550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdc2690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdc27d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdc2bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdcc050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdcc490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdcc8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdccd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdcce90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdd3310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdd3450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdd3890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdd39d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdd3dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdd3f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DsssParameterSetChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DsssParameterSetChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdda690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DsssParameterSetValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DsssParameterSetValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bddadd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DsssParameterSet const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DsssParameterSet const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bde3290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bde3890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bde3bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bde3d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bded090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DsssParameterSet')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DsssParameterSet' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bded390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bded810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdedb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdede90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DsssParameterSet const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DsssParameterSet const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdedfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSet const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSet const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdf4510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdf4c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdf4d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdf4ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdfd310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdfd750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdfdb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bdfdfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be06450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be06890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be06cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be10150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be10590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be109d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be10e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be19290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be196d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be19b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be19f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be213d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be21810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be21c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be290d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be29510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be29950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be29d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be32210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be32650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be32a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be32ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be3a350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be3a790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be3abd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be3ad50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be411d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be41310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be41790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be418d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be41d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be41e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be4b290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be4b3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be4b7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be4b910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be4bd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be4be50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be52290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be523d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be52810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be52950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be52d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be52ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be5b310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be5b450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be5b850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be5b990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be5bd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be5bed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be62310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be62450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be62850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be62990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be62d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be62ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be6b350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be6b490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be6b8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be6ba10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be6be10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be6bf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be73390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be734d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be738d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be73a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be73e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be73f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be7b3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be7b510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be7b950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be7ba90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be7be90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be7bfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be83410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be83550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be83950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be83a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be83e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be83fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSetChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSetChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be8c750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSetValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSetValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be8ce90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSet const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSet const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be97350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be97950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be97c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be97dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be9e150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSet')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSet' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be9e450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be9e8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be9ec50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10be9ef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EdcaParameterSet const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaParameterSet const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bea60d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< ns3::Mac48Address, bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< ns3::Mac48Address, bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bea6510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bea6d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beae4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beaebd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MacLow >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MacLow >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLow *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beaeed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beb6250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacTxMiddle *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacTxMiddle *' => failure
'ns3::MacTxMiddle *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:12644: Warning: exception TypeLookupError(['ns3::MacTxMiddle *'],) in wrapper public: retval? ???::SetTxMiddle (params?);
  [param('ns3::MacTxMiddle *', 'txMiddle')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beb6450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DcfManager *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DcfManager *' => failure
'ns3::DcfManager *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:12648: Warning: exception TypeLookupError(['ns3::DcfManager *'],) in wrapper public: retval? ???::SetManager (params?);
  [param('ns3::DcfManager *', 'manager')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beb6650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beb6790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beb6d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beb6e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bebf890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiRemoteStationManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiRemoteStationManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bebfb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bebfe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeOfStation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeOfStation' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bebff90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeOfStation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeOfStation' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bec73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiMacQueue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiMacQueue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacQueue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bec79d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bec7d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bec7e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10becf510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10becf650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10becfcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10becfe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bed94d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bed9610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bed9c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bee1390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bee1a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beeb150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MacLow >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MacLow >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLow *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beeb9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MsduAggregator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MsduAggregator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MsduAggregator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10beebf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MpduAggregator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MpduAggregator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MpduAggregator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bef3450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bef3790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bef38d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bef39d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bef3dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bef3f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10befb050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10befb450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10befb590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10befb690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10befba90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10befbbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10befbcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf04110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf04550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf04990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf04dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf0c250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf0c690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf0cad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf0cf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf16090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf16190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf165d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf16a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf16b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf16c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf1e0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CtrlBAckResponseHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CtrlBAckResponseHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf1e210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf1e3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf1e4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf1e5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf1e6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf1ead0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf1ec10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf26050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtAddBaResponseHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtAddBaResponseHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf26190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf26350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf26750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtDelBaHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtDelBaHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf26890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf26a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf26e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf2e2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf2e710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf2eb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf2efd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf36450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf36890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf36cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf36fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf36fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf3e4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf3e7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf3e7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf3ec90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf46110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf46550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf46990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf46dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf4e250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf4e690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf4ec90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf4ecd0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:12873: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::GetFragmentPacket (params?);
  [param('ns3::WifiMacHeader *', 'hdr')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf4ee50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AcIndex')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AcIndex' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf4ef90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf573d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf576d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf576d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf57bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MsduAggregator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MsduAggregator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MsduAggregator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf57ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf5f210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MpduAggregator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MpduAggregator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MpduAggregator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf5f510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf5f810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf5fb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf5fb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf5ffd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf4eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf4edd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf66610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf66a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf66b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf66f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf71110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf71210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf71310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf71710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf71a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf71a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf71b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf71f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf775d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf776d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77c10>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:12931: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::GetNextSequenceNumberfor (params?);
  [param('ns3::WifiMacHeader *', 'hdr')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77ed0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:12935: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::PeekNextSequenceNumberfor (params?);
  [param('ns3::WifiMacHeader *', 'hdr')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf77c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7f410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7f450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7f5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7f7d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:12943: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::PeekNextRetransmitPacket (params?);
  [param('ns3::WifiMacHeader &', 'header'), param('ns3::Mac48Address', 'recipient'), param('uint8_t', 'tid'), param('ns3::Time *', 'timestamp')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7f590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7f650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7fbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7fd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf88210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf88350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf88750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf90110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf90250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf90350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf90750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf7f1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf90f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf9b650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf9b790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf9b890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf9b990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf9ba90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bf9bb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfa2210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EmptyAttributeAccessor const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EmptyAttributeAccessor const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfa28d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfab050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfab190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfab350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfab7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfabc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfb3090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfb31d0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:13021: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::Set (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EmptyAttributeChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EmptyAttributeChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfb3a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfbb1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfbb310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfbb7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfbb910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfbbad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfc6150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfc6490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfabfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfc6a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EmptyAttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EmptyAttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfc6f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfce850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfcead0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfcec90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfcefd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfd6290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfd6650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EnumChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EnumChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfd6950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfdd0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfdd210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfdd310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfdd750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfdd890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfdd990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfddd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfdded0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfe53d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfe5510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfe56d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfe5d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfed0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfed510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfed950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EnumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EnumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bfeddd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bff5590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bff5ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bff5e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bff5f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bffe310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bffe610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bffea90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10bffee10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c005190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0052d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c005710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c005e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c00e2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c00e710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c00e850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c00e950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c00ed50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c00ee90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c00ef90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0163d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c016a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c01e190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c01e8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c01ea10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c01eb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c01ef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0283d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c028810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c028c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c02f0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c02f510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c02f950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c02fad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c02ff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c038090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0384d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c038610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c038a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c038b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c038f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0400d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0404d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c040610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformationChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformationChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c040d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformationValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformationValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c047510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c047990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c047f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c050310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c050450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c050790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c050a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c050ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c05a290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c05a590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErpInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErpInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c05a6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ErrorRateModel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ErrorRateModel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c05aed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c063350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c063490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c063590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c063990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c063ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c063bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c063cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c063dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c06b4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventImpl const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventImpl const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c06b950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0730d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c073550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0739d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c073e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c07c290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c07c9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c07ce10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c085290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0853d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0854d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0858d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c085a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c085b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c085f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c08d610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ExtendedSupportedRatesIE const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ExtendedSupportedRatesIE const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c08dcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c097450>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:13398: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10c0973d0>
  cls.add_constructor([param('ns3::SupportedRates *', 'rates')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0975d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c097710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c097850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c097c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c09f0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c09f510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c09f950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c09fad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c09fd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c09fe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0a8310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0a8450>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:13432: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetSupportedRates (params?);
  [param('ns3::SupportedRates *', 'rates')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0a85d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0a8d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0b0190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0b05d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0b0710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0b0810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0b0c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0b0d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0b0e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0ba290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0ba950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0bad50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0c14d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0c1610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0c1750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0c1b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0c1f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0ca410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0ca850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0cac90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0d3110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0d3550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0d3990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0d3dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0db250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0db690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0dbad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0dbf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => failure
'uint8_t *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:13552: Warning: exception TypeLookupError(['uint8_t *'],) in wrapper public: retval? ???::GetRxMcsBitmask (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0e4490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0e48d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0e4d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0ec190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0ec4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0ec910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0ecd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0f51d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0f5610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0f5a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0f5e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0fd310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0fd450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0fd850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0fd9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0fde10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c0fdf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c105410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c105550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c105990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c105ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c105ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c10d050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c10d450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c10d590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c10d990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c10dad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c10ded0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c117050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c117450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c117590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1179d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c117b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c117f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c11e090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c11e490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c11e5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c11e9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c11eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c11ef10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c126090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c126490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1265d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1269d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c126b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c126f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c130090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c130490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1305d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1306d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c130ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c130c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c138050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c138190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c138590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1386d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c138ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c138c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c140050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c140190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilitiesChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilitiesChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1408d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilitiesValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilitiesValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c148090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c148510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c148b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c148e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c148f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c150310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c150610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c150a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c150dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c158110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c158250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperations const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperations const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c158750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c158e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c158fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c161150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c161550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c161990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c161dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c167250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c167690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c167ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c167f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c171390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1717d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c171c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c179090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1794d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c179910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c179d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1831d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c183610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c183a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c183e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c18d310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c18d750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c18db90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c18dfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c196450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c196890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c196cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c19e150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c19e5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c19e710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c19eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c19ec90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1a6110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1a6250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1a6690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1a67d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1a68d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1a6cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1a6e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1af250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1af390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1af790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1af8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1afcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1afe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1b5290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1b53d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1b57d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1b5910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1b5d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1b5e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1bf290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1bf3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1bf7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1bf910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1bfd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1bfe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1c6290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1c63d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1c67d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1c6910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1c6d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1c6e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1cf2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1cf410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1cf810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1cf950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1cfd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1cfe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1d72d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1d7410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1d7810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1d7950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1d7d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1d7e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1df2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1df410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1df810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1df950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1dfd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1dfe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1e72d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1e7410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperationsChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperationsChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1e7b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperationsValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperationsValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1f1310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperations const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperations const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1f1790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1f1d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1fa110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1fa250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1fa590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperations')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperations' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1fa890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c1facd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c203090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c203390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtOperations const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtOperations const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2034d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::IntegerValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IntegerValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c203cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.LongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c20a190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c20a750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c20aa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c20abd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c20af10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c214250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2146d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c214a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c214d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.LongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c214e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c21b3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c21bb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c21bc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c21bd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c223550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c223850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c223f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c22c590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c22c890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c22ce10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c22cf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2370d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c237790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2378d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c237f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c23f290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c23f810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c23f950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c23fa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c247110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c247250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c247910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c247a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c250150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c250290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c250910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2591d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2591d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14149: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::GetProtocol (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14154: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::GetProtocol (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4RoutingProtocol *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c23f510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c23fe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c247fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14169: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Insert (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c259850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14174: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Insert (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c25f450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c25f590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c25f690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c25fa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c25fbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c25ffd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c269150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c269590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14194: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Remove (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c22c390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14199: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Remove (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c270090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2701d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2702d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2706d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c270810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c270910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c270c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c270fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c270fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2770d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c277510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c277810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c277810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c277910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c277a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4Route >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4Route >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Route *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c277cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c27e050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c27e350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c27e350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4Route >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4Route >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Route *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c25f090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2696d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c269650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c27e150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c27e4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c27e5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c27e9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c27eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c27ec10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c285090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4RoutingProtocol *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2853d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2856d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c285810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c285c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c285d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c285e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c28b250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c28b750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c28bb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c28bf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2930d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c293450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2935d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4AddressChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4AddressChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c293cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4AddressValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4AddressValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c29c490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c29c910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c29cf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2a4310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2a4450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2a4790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2a4a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2a4ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2ac290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2ac590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2ac6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2ace90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2acfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2b6110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2b6550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2b6850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2b6d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2bd090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2bd390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2bd690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2bd810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2bd910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4Interface >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4Interface >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Interface *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14351: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv4Interface >', 'ns3::Ipv4Interface *'],) in wrapper public: retval? ???::GetInterface (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2bdfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2c6150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2c6550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2c6850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2c6b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2c6c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2c6d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2cd1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2cd310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2cd710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2cd850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2cdc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2cdd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2d51d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2d57d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2d5810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14396: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::GetProtocol (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14401: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::GetProtocol (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4RoutingProtocol *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2e7110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2e74d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2e7910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14416: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Insert (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2ef210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14421: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Insert (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2ef690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2ef810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2ef910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2efd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2efe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2f7290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2f73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2f77d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2f7910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2f7d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c300050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c300210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c300210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c300310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3004d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDevice::PacketType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice::PacketType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c300690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c300ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14450: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Remove (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3073d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14455: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Remove (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c307dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c307f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c30e090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c30e490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c30e5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c30e6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c30ea50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c30ed90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c30ed90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c30ee50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3192d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3195d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3195d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3196d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3197d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4Route >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4Route >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Route *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c319a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c319d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3074d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3074d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4Route >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4Route >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Route *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c321050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c321390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3214d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3218d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c321a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c321e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c321f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c328090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c328490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3285d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3286d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c328ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c328dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c32f110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4RoutingProtocol *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c32f450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c32f750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c32f890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c32fc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c32fdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c32fed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c338290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c338710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c338b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c338f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c340350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c340750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3408d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c340c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c340dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4MaskChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4MaskChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c349510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4MaskValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4MaskValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c349c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c353150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c353750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c353a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c353bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c353f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c35a250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c35a690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c35aa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c35ad10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c35ae50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4MulticastRoute const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4MulticastRoute const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c362390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c362ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c362f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned int, unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned int, unsigned int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c36b390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c36b990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c36bdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c36bf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3723d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c372510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c372990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c372ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c372bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c37a050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c37a190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c37a510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c37a950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Route const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Route const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c37ae50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3835d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c383a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c38b050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c38b390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c38b7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c38b910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c38bd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c38be50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c394290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c394590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c394890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3949d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4RoutingProtocol const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4RoutingProtocol const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2ef290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c2bdd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c394e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c394f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c39c0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c39c7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c39c910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c39cf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3a3110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3a3790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3a38d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3a39d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3ac0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OutputStreamWrapper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OutputStreamWrapper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3ac410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3ac990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3acc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3acc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b7050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14723: Warning: exception TypeLookupError(['ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: virtual retval? ???::RouteInput (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4Route >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4Route >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Route *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b7090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b7290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b7290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b7610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Socket::SocketErrno &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket::SocketErrno &' => success ((<class 'pybindgen.enum.ThisEnumRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b7610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c39c710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3a3650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3a3e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b8290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b83d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b84d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b8c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b8f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d0510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d0690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d0790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d0e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d0f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d8650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d8950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d8ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3e1050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3e1150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3e17d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3e1910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3e1fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3ea150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3ea810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3ea950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3eafd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3f4890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3f48d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14800: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::GetProtocol (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14805: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::GetProtocol (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6RoutingProtocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14810: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv6RoutingProtocol >', 'ns3::Ipv6RoutingProtocol *'],) in wrapper public: virtual retval? ???::GetRoutingProtocol (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4048d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c404dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14820: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Insert (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3fb7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14825: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Insert (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d8bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d8d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3e1e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3e1e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3ead90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3f4550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3b8b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14850: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Remove (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c40aa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14855: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Remove (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c411510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c411650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c411750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c40ac50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c40ab50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c40a490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3d02d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c411a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3fb810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c411b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c411c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6Route >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6Route >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Route *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14870: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv6Route >', 'ns3::Ipv6Route *'],) in wrapper public: virtual retval? ???::Send (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c419690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4197d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c419c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c419d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c419e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c420290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4203d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4204d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c420910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c420a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c420b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c420f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6RoutingProtocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14895: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv6RoutingProtocol >', 'ns3::Ipv6RoutingProtocol *'],) in wrapper public: virtual retval? ???::SetRoutingProtocol (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c411e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c3fb190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c428bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c428d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c428e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c42f1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c42f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c42fa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c42fe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c436050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4363d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c436550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6AddressChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6AddressChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c436c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6AddressValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6AddressValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c43f410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c43f890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c43fe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c449210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c449350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c449690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c449990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c449dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c450190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c450490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4505d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c450a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c450e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c45a650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c45a950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c45ac50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14988: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Insert (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c463550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14993: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Insert (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c463f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:14998: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Remove (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c46e890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15003: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Remove (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15008: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::GetProtocol (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15013: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::GetProtocol (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c475c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c475f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c47f290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c47f5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c47f710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c47fb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c47fc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c475110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDevice::PacketType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice::PacketType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c45ae50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6Route >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6Route >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Route *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15038: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv6Route >', 'ns3::Ipv6Route *'],) in wrapper public: virtual retval? ???::Send (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c48c810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6RoutingProtocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15043: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv6RoutingProtocol >', 'ns3::Ipv6RoutingProtocol *'],) in wrapper public: virtual retval? ???::SetRoutingProtocol (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6RoutingProtocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15048: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv6RoutingProtocol >', 'ns3::Ipv6RoutingProtocol *'],) in wrapper public: virtual retval? ???::GetRoutingProtocol (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c493a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c493d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv6Interface >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv6Interface >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Interface *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15058: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv6Interface >', 'ns3::Ipv6Interface *'],) in wrapper public: retval? ???::GetInterface (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c49d390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c48cc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c48ca90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c486a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c46ea10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c428150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c40a190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c49d410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c49d0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c49d1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c49d810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c49d990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c49da90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c49de90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c49dfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4a3410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4a3550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4a3650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4a3a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4a3b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4a3c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ab050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ab1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ab2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ab6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ab810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4abc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4abd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4b3190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4b32d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4b33d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4b37d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4b3910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4b3d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4b3e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ba290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ba3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ba7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ba910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4bad10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4bae50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4baf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4c3390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4c34d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4c35d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4c3b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4c3bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Icmpv6L4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Icmpv6L4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Icmpv6L4Protocol *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15163: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Icmpv6L4Protocol >', 'ns3::Icmpv6L4Protocol *'],) in wrapper public: retval? ???::GetIcmpv6 (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cb350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cb450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cb550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cb650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cb750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cb850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cb950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cba50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cbe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cbf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4d30d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4d31d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4d32d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4d36d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4d3b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4d3f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Header')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Header' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4db0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4db390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6L3Protocol::DropReason')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6L3Protocol::DropReason' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4cb210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4db490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4db5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4db9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4dbb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4dbc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4dbf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4e2150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4e2550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4e2690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4e2790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4e2b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4e2c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4eb0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4eb210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4eb310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4eb690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4eba90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4ebe90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4f3050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4f33d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4f37d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4f3950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4f3cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4fb110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4fb290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4fb610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6PmtuCache const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6PmtuCache const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c4fba90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c505210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c505910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c505a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c505e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c50d2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c50d710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c50d850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c50d950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c50dd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c50de90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6PrefixChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6PrefixChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c517610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6PrefixValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6PrefixValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c517d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c51e250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c51e850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c51eb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c51ecd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c528050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c528350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c528790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c528b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c528e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c528f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c531450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c531b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c531fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c539450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c539590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c539690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c539a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c539bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c539cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c540110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5407d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48AddressChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48AddressChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c54b1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48AddressValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48AddressValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c54b950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c54bdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c554410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c554750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c554890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c554bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c554ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c55b350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c55b6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c55b9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c55bb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLow const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLow const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c563050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c563990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c563b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c563b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c56c050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c56c350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c56c350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowTransmissionParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowTransmissionParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c56c510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c56c990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c56cc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c56cc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowTransmissionParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowTransmissionParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c56ce50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c573310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtAddBaResponseHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtAddBaResponseHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c573450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c573610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c573710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c573b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c573e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c573e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c573f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c57a050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c57a450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c57a590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c57a690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c57aa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c57aed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c581350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c581790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c581bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c58a090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c58a4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c58a910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c58ad50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c593090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c593090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c593a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c593dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c59a290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c59a710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c59ab90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c59afd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5a4490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5a4910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5a4d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5a4e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5ab2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5ab5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5ab5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5ab9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5abcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5abcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5abdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5abed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5abed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b4450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AcIndex')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AcIndex' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b4590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowAggregationCapableTransmissionListener *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowAggregationCapableTransmissionListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b4590>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15536: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::RegisterBlockAckListenerForAc (params?);
  [param('ns3::AcIndex', 'ac'), param('ns3::MacLowAggregationCapableTransmissionListener *', 'listener')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b46d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowDcfListener *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowDcfListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b4710>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15540: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::RegisterDcfListener (params?);
  [param('ns3::MacLowDcfListener *', 'listener')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b44d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b4bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b4d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5bc150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5bc290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5bc690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5bc7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5bcbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5bcd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5c3190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5c32d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5c36d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5c3810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5c3c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5c3d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5cc1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5cc4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b4650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5b4710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5cca90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5cced0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5d3050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5d3490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::WifiMacHeader const *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::WifiMacHeader const *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5d35d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5db090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5db1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5db610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5db750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5dbb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiRemoteStationManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiRemoteStationManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5dbe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5e3150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5e3450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5e3450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowTransmissionParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowTransmissionParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5e3610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowTransmissionListener *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowTransmissionListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5e3710>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15609: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::StartTransmission (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5e3d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5ea110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5ea110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5ea3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5ea3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5ea7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtBeaconHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtBeaconHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5f3210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5f3650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MobilityModel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5f3ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5fc250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5fc390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5e3790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5fc7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5fcb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c5fcf90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c604290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c604610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c604a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c604e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c604fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c60d490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c60dc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c60dd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c615410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c615ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c61d1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c61d310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MpduAggregator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MpduAggregator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c61dd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c627190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c627490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c627490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c627590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c627c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c627f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c630150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6306d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6309d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c630b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c638150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c638450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6389d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c638b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c638dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c638dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmpduSubframeHeader > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmpduSubframeHeader > >' => failure
'std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmpduSubframeHeader > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15733: Warning: exception TypeLookupError(['std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmpduSubframeHeader > >'],) in wrapper public: retval? ???::Deaggregate (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6418d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c641f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6415d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c641750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MsduAggregator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MsduAggregator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c649ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c649f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c653250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c653410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c653410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c653510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmsduSubframeHeader > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmsduSubframeHeader > >' => failure
'std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmsduSubframeHeader > >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15765: Warning: exception TypeLookupError(['std::list< std::pair< ns3::Ptr< ns3::Packet >, ns3::AmsduSubframeHeader > >'],) in wrapper public: retval? ???::Deaggregate (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c653fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c65b690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c65bad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c65bc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDevice const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c664250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c664690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6647d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c66b410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c66bb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Channel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Channel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Channel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c675410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6759d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c67e0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c67e7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c67e910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c67efd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c687150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c687990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c687f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c68e3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c68ea90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c697190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c697850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c697f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6a2610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6a2cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6a2fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6a2fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6ab1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6ab890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6abb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6abb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6abd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6abf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6b35d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6b3710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6b3d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6b3ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6bc5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6bc710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6bce10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6c4150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6c46d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6c4810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6ca750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6ca890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6d2710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceQueue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceQueue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6d2e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::QueueLimits >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::QueueLimits >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::QueueLimits *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15923: Warning: exception TypeLookupError(['ns3::Ptr< ns3::QueueLimits >', 'ns3::QueueLimits *'],) in wrapper public: retval? ???::GetQueueLimits (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6db810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6dbc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6db790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6dbf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6e3090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6e3490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6e38d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::QueueLimits >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::QueueLimits >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::QueueLimits *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15944: Warning: exception TypeLookupError(['ns3::Ptr< ns3::QueueLimits >', 'ns3::QueueLimits *'],) in wrapper public: retval? ???::SetQueueLimits (params?);
  [param('ns3::Ptr< ns3::QueueLimits >', 'ql')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6e3b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6e3d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6ec6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6ecb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6ecf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceQueueInterface const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceQueueInterface const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6f3410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6e3b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6f3c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:15985: Warning: exception TypeLookupError(['ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: retval? ???::GetSelectQueueCallback (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDeviceQueue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDeviceQueue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceQueue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6fc950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6fc9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6fcd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c705210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c705350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c705d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c705ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c70e310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NixVector const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NixVector const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c6fc710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c70edd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c70ef10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c718050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c718450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c718590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NixVector >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NixVector >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NixVector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c718b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c718ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c720050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7201d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7205d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c720710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c720b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c720f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7283d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t *' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c728510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c728650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Node const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c728a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c730290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c730650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Application >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Application >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Application *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c730910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c730c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c730f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c739290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Application >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Application >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Application *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c739850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c739890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c739e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c739e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c742310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c742790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c742bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c74b050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c74b4d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c74b950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c74bdd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16118: Warning: exception TypeLookupError(['ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: retval? ???::RegisterDeviceAdditionListener (params?);
  [param('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'listener')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c751650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c751710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c759050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c759390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c759390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7511d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16126: Warning: exception TypeLookupError(['ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: retval? ???::UnregisterDeviceAdditionListener (params?);
  [param('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'listener')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c759810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7598d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c75e590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c769090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double const' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c769a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c769e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c74bd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c751490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c772710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c772b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c772c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c772d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c772e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c77a2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c77a410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c77a510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c77a610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c77aa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c782110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactoryChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactoryChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c782ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactoryValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactoryValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c78b290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c78b710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c78bd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c793090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7931d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c793510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c793810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c793c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c793fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c79c310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c79c450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifierChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifierChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c79cc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifierValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifierValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7a43d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7a4810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7a4e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7ad190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7ad2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7ad610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7ad910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7add90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7b5150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7b5450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7b5590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OutputStreamWrapper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OutputStreamWrapper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7b5a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7b5f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_Ios_Openmode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_Ios_Openmode' => success ((<class 'ns3modulegen_core_customizations.IosOpenmodeParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7bd050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream *' => failure
'std::ostream *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16274: Warning: exception TypeLookupError(['std::ostream *'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10c7bd390>
  cls.add_constructor([param('std::ostream *', 'os')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream *' => failure
'std::ostream *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16278: Warning: exception TypeLookupError(['std::ostream *'],) in wrapper public: retval? ???::GetStream (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Packet const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7bd950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7bddd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7c9210>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16290: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10c7c9190>
  cls.add_constructor([param('uint8_t const *', 'buffer'), param('uint32_t', 'size'), param('bool', 'magic')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7c9390>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16292: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10c7c91d0>
  cls.add_constructor([param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7c94d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7c97d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7c9b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7c9c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d2110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d2250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d2710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7c9410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d27d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d2910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d2d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d2e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::ItemIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::ItemIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d7350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d7990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d7d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d7e50>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16333: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7d7f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream *' => failure
'std::ostream *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16338: Warning: exception TypeLookupError(['std::ostream *'],) in wrapper public: retval? ???::CopyData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7df350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7df390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7df490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7df890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7dfcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7e7150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7e7290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7df110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NixVector >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NixVector >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NixVector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7e78d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7e7c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7ef0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7ef510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7ef990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7efe10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7eff50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7f83d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7f8510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7f8950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7f8a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7f8ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16407: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c800110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16412: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::PrintByteTags (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c7f8f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16417: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::PrintPacketTags (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c800310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c800750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c800b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c800cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c809110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c809250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c809650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c809790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c809bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c809d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c812190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8122d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c812710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c812850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c812c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c812dd0>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16454: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8000d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NixVector >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NixVector >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NixVector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c812fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c81a310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c81a790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c81aed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c823350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c823790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c823bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c823d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c823e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c823f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c82d350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c82d490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c82d590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c82d690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c82da90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c833190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PointerChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PointerChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c833b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c833f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PointerValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PointerValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c83f450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c83fd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c847210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c847550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c847690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8479d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c847e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c84f210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c84f590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c84f890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c84fb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8560d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c856510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c856850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c856c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::QueueItem::Uint8Values')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::QueueItem::Uint8Values' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c856dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t &' => success ((<class 'pybindgen.typehandlers.inttype.UInt8RefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c856dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c85e390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:16577: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c85eb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c867290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8673d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c867a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c867bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c86f290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c86f3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c86fa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c86fb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c878250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c878390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c878a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c878b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c880210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c880350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8809d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8890d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c889790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c889e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c895550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c895c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c89d310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c89da10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c89db50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c89df50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8a73d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8a7510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8a7b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8b0290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8b0990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8b8090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8b81d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8b8850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8b8990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8c1050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8c1190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8c1810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8c1f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8ca610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8ca910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8ca910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8caa10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8d10d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8d1790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8d1a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8d1a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8db110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8db410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8dbb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8e5150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8e5810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiRemoteStationManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiRemoteStationManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8e5ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiRemoteStationManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiRemoteStationManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8ed210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8ed7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8edc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8f60d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::Mac48Address, ns3::Mac48Address, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::Mac48Address, ns3::Mac48Address, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8f6210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8f6e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8f6fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8ffbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c8ffd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c904910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c904a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c90e110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c90e7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c90e910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c90ef90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c916690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c91e0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::DcaTxop >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::DcaTxop >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DcaTxop *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c91ec90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EdcaTxopN >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EdcaTxopN >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaTxopN *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c928510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EdcaTxopN >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EdcaTxopN >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaTxopN *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c928d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EdcaTxopN >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EdcaTxopN >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaTxopN *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c812c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EdcaTxopN >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EdcaTxopN >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EdcaTxopN *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9309d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c93a090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c93a1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c93ac10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c93ad50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c93ae50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c944650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeOfStation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeOfStation' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c944790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c944f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c94b250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c94b250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c94bcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c94be10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9528d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c952a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c95b510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c95b810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c95b810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c95b910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9640d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9643d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9643d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c964e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MgtAddBaRequestHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MgtAddBaRequestHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c964f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c96c190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c96cb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c96ccd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c975490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c975c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c975d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c97f550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c97fd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c97fe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c987610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c987dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c987f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c98e6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c98ee90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c98efd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c997790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c997f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9a0750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9a0b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9a0cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9a90d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9a9210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9a9350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9a9750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9a9bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9b1050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9b14d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9b1610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9b1ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9b1f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9b9110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SsidChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SsidChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9b9890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SsidValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SsidValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9c3050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9c34d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9c3a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9c3e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9c3f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9c92d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9c95d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9c9a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9c9dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9d2110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9d2250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SupportedRates const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SupportedRates const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9d2a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9d2ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9da050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9da490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9da5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9da9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9dab10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9dac50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9e1090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9e14d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9e1910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9e1d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9e1e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9ea2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9ea410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9ea810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9ea950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9ead50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9eae90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9f32d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9f3410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9f3890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9f39d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9f3d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ExtendedSupportedRatesIE')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ExtendedSupportedRatesIE' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9fa1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TimeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TimeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10c9fabd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca06090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca06650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca069d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca06b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca06e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca0d190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca0d610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca0d990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca0dc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca0ddd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeIdChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeIdChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca16610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeIdValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeIdValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca16d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca1e250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca1e810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca1eb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca1ecd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca26050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca26350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca267d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca26b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca26e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca26f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UintegerValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UintegerValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca2c7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca2cc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca37250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca37590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca376d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca37a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca37d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca3d190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca3d510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca3d810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca3d950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2DChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2DChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca46150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2DValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2DValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca468d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca46d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca4f390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca4f6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca4f810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca4fb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2D')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2D' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca4fe50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca562d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca56650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca56950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca56a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3DChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3DChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca5f2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3DValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3DValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca5fa50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca5fed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca69510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca69850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca69990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca69cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3D')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3D' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca69fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca72450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca727d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca72ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca72c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca79150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca79890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca799d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca79b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiInformationElementId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiInformationElementId' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca79f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca82390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca827d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca82c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca89090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca894d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca89910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca89d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca931d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca93610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca93a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca93e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca9a310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca9a750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca9ab90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ca9afd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caa3450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caa3890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caa39d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caa3ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caa3ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caac050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caac450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caac590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caac990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caacb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caacf50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cab60d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cab6510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cab6650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cab6a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cab6b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cab6f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cabd110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cabd510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cabd650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cabda90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cabdbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cabdfd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cac6150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cac6250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cac65d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cac6750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cac6b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cac6c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cacd0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cacd210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cacd610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cacd750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cacdb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cacdc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cad60d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cad6210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cad6650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cad6790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cad6b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cad6cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cad6dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cadd190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cadd310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cadd710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cadd850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caddc50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caddd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilitiesChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilitiesChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cae5510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilitiesValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilitiesValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cae5c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caef150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caef750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caefa90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caefbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caeff10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caf7250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caf76d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caf7a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caf7d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VhtCapabilities const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VhtCapabilities const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10caf7e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WaveMacLow const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveMacLow const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cafe3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cafeb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cafef50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WaveNetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WaveNetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveNetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb08290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb08590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb08890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb08890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowTransmissionParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowTransmissionParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb08a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacLowTransmissionListener *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLowTransmissionListener *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb08b50>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:17520: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::StartTransmission (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb0e290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb0e590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb0e590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WaveNetDevice const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveNetDevice const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb0ed10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb17490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb175d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb20210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb20350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OcbWifiMac >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OcbWifiMac >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OcbWifiMac *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb08bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb20690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb20990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb20c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb20dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AcIndex')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AcIndex' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb20ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb29310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb29450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb29850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb29990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb29d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb314d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Channel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Channel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Channel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb31d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ChannelCoordinator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ChannelCoordinator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelCoordinator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb39590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ChannelManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ChannelManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb39a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ChannelScheduler >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ChannelScheduler >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelScheduler *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb39fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb41350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::OcbWifiMac >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::OcbWifiMac >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OcbWifiMac *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb41bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb41c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned int, ns3::Ptr< ns3::OcbWifiMac > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned int, ns3::Ptr< ns3::OcbWifiMac > >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb4a050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb4a6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb4ad90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb4aed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb535d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb53710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb53f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb5c710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb5c750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::Ptr< ns3::WifiPhy > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::Ptr< ns3::WifiPhy > >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb5cb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb65150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::VsaManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::VsaManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VsaManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb65750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb65a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb6c190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb6c850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb6cf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb75610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb75cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb7d3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TxProfile const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TxProfile const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb7d510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb7d9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb7dcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb7dcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb7de90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb87550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb87850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb87850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb87a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb87bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb8e290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb8e590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb8e590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb8e750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TxInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TxInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb8e850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb8ecd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb8ee10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb954d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ChannelCoordinator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ChannelCoordinator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelCoordinator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb95810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb95b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ChannelManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ChannelManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cb95e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cba0150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::ChannelScheduler >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::ChannelScheduler >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ChannelScheduler *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cba0490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cba0790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cba08d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cba0f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbaa110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbaa7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbaaad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbb1090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbb11d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbb7110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbb7250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbc00d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::VsaManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::VsaManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VsaManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbc03d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbc06d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::Packet const >, ns3::Address const &, unsigned int, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::Packet const >, ns3::Address const &, unsigned int, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbc0810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbc7390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SchInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SchInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbc74d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbc7990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VsaInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VsaInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbc7ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbc7f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbd0110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbd0510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbd0650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbd0a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbd7150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbd77d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiChannel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiChannel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbdf1d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbdf610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiModeChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiModeChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbdfd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiModeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiModeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbe9550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbe99d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbe9fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbf2350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbf2490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbf27d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbf2ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbf2f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbfb2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbfb5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMode const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMode const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbfb710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::YansWifiChannel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiChannel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cbfbc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc02390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::YansWifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::YansWifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc02650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc02950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc02a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc0c090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc0c090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc0c790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc0ce50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc142d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::YansWifiPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::YansWifiPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::YansWifiPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc14590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc14750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc14750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiTxVector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiTxVector' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc14850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPreamble')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPreamble' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc14950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::mpduType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::mpduType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc14950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc14950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc14f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PropagationDelayModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PropagationDelayModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PropagationDelayModel *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:17862: Warning: exception TypeLookupError(['ns3::Ptr< ns3::PropagationDelayModel >', 'ns3::PropagationDelayModel *'],) in wrapper public: retval? ???::SetPropagationDelayModel (params?);
  [param('ns3::Ptr< ns3::PropagationDelayModel >', 'delay')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc14ed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PropagationLossModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PropagationLossModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PropagationLossModel *' => failure ('')
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:17866: Warning: exception TypeLookupError(['ns3::Ptr< ns3::PropagationLossModel >', 'ns3::PropagationLossModel *'],) in wrapper public: retval? ???::SetPropagationLossModel (params?);
  [param('ns3::Ptr< ns3::PropagationLossModel >', 'loss')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AddressChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AddressChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc1e6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AddressValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AddressValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc1ee50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc24310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc24910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc24c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc24d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc2c110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc2c410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc2c890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc2cc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc2cf10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc35090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc1e390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc35910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MacLow >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MacLow >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacLow *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc35c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc35f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DcfManager *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DcfManager *' => failure
'ns3::DcfManager *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:17924: Warning: exception TypeLookupError(['ns3::DcfManager *'],) in wrapper public: retval? ???::SetManager (params?);
  [param('ns3::DcfManager *', 'manager')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc3e190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiRemoteStationManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiRemoteStationManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiRemoteStationManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc3e450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc3e750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacTxMiddle *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacTxMiddle *' => failure
'ns3::MacTxMiddle *' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:17932: Warning: exception TypeLookupError(['ns3::MacTxMiddle *'],) in wrapper public: retval? ???::SetTxMiddle (params?);
  [param('ns3::MacTxMiddle *', 'txMiddle')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc3e950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc3ea90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc45490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::WifiMacHeader const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc455d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WifiMacQueue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WifiMacQueue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacQueue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc3e8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc4e0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc4e210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc4e950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc4ea90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc56190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc562d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc56990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc56ad0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc5e190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc5e890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc5ef90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc696d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc69d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc700d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc700d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc705d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc70710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc70b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc771d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc77850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc77f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc812d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc812d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc813d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc81810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc81950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VscCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VscCallback' => failure
'ns3::VscCallback' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:18021: Warning: exception TypeLookupError(['ns3::VscCallback'],) in wrapper public: retval? ???::AddReceiveVscCallback (params?);
  [param('ns3::OrganizationIdentifier', 'oi'), param('ns3::VscCallback', 'cb')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc81a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::OrganizationIdentifier')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::OrganizationIdentifier' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc81b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc81f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc88690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ssid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ssid' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc887d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc88e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc88f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc92650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc81a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc81810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc998d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cc99a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca2610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca2910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca2910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca2f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca9110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca9210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca9310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AcIndex')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AcIndex' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca9410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca9810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::WaveNetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::WaveNetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WaveNetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca9b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cca9e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccb2290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccb26d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccb2810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccb2c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AcIndex')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AcIndex' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccb2d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccba190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccba610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiPhyStandard')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiPhyStandard' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccba750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccc4190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccc4490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccc4490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Implementation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Implementation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccc4bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cccc350>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cccc490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cccc610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cccca50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccccb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccccd10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccd5190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Function::Fnv1a const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Function::Fnv1a const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccd5610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccd5d50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccd5e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccde050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccde490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccde5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccde750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccdeb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Function::Hash32 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Function::Hash32 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cce5050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Hash32Function_ptr')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Hash32Function_ptr' => failure
'ns3::Hash::Hash32Function_ptr' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:18149: Warning: exception TypeLookupError(['ns3::Hash::Hash32Function_ptr'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10cce5450>
  cls.add_constructor([param('ns3::Hash::Hash32Function_ptr', 'hp')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cce5550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cce5690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cce5810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cce5c50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Function::Hash64 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Function::Hash64 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccee110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Hash64Function_ptr')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Hash64Function_ptr' => failure
'ns3::Hash::Hash64Function_ptr' did not match
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:18166: Warning: exception TypeLookupError(['ns3::Hash::Hash64Function_ptr'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x10ccee510>
  cls.add_constructor([param('ns3::Hash::Hash64Function_ptr', 'hp')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccee610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccee750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccee8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cceed10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cceee50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cceefd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccf6450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Function::Murmur3 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Function::Murmur3 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccee590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccf6e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccf6f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccfd150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccfd590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccfd6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccfd850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10ccfdc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd066d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06450>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06250>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06fd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd063d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned short')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned short' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd063d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDevice::PacketType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice::PacketType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13290>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned short')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned short' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06a10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13d10>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06310>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd136d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13750>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::WifiMacHeader &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::WifiMacHeader &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd131d0>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06e10>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned char')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned char' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13ed0>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned char')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned char' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13390>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11110>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13410>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd131d0>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd062d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13050>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11710>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned short')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned short' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd13390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11b90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDevice::PacketType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice::PacketType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11e50>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned char')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned char' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd06c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::QueueItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::QueueItem >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::QueueItem *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11950>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x109c06cd0>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x109ab0410>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x10cd11810>))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4968: Warning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::WaveHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & mac, ns3::NodeContainer c) const;
  is_const=True, is_virtual=True)
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4973: Warning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::WaveHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & mac, ns3::Ptr< ns3::Node > node) const;
  is_const=True, is_virtual=True)
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:4978: Warning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::WaveHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & mac, std::string nodeName) const;
  is_const=True, is_virtual=True)
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6698: Warning: exception CodeGenerationError('ns3::AttributeValue cannot be constructed (have pure virtual methods but no helper class)',) in wrapper public: virtual void ns3::NqosWaveMacHelper::SetType (std::string type, std::string n0, ns3::AttributeValue const & v0, std::string n1, ns3::AttributeValue const & v1, std::string n2, ns3::AttributeValue const & v2, std::string n3, ns3::AttributeValue const & v3, std::string n4, ns3::AttributeValue const & v4, std::string n5, ns3::AttributeValue const & v5, std::string n6, ns3::AttributeValue const & v6, std::string n7, ns3::AttributeValue const & v7, std::string n8, ns3::AttributeValue const & v8, std::string n9, ns3::AttributeValue const & v9, std::string n10, ns3::AttributeValue const & v10);
  is_virtual=True)
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/pybindgen-0.17.0.post57+nga6376f2/pybindgen/cppclass.py:3818: UserWarning: Returning shared pointers is dangerous!  The C++ API should be redesigned to avoid this situation.
  warnings.warn("Returning shared pointers is dangerous!"
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:6866: Warning: exception CodeGenerationError('ns3::AttributeValue cannot be constructed (have pure virtual methods but no helper class)',) in wrapper public: virtual void ns3::QosWaveMacHelper::SetType (std::string type, std::string n0, ns3::AttributeValue const & v0, std::string n1, ns3::AttributeValue const & v1, std::string n2, ns3::AttributeValue const & v2, std::string n3, ns3::AttributeValue const & v3, std::string n4, ns3::AttributeValue const & v4, std::string n5, ns3::AttributeValue const & v5, std::string n6, ns3::AttributeValue const & v6, std::string n7, ns3::AttributeValue const & v7, std::string n8, ns3::AttributeValue const & v8, std::string n9, ns3::AttributeValue const & v9, std::string n10, ns3::AttributeValue const & v10);
  is_virtual=True)
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:8382: Warning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::Wifi80211pHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & macHelper, ns3::NodeContainer c) const;
  is_const=True, is_virtual=True)
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::WifiHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & mac, ns3::Ptr< ns3::Node > node) const;
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::WifiHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & mac, std::string nodeName) const;
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:17537: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::WaveNetDevice::AddLinkChangeCallback (ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > callback);
  is_virtual=True)
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:17727: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::WaveNetDevice::SetPromiscReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty > cb);
  is_virtual=True)
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:17732: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::WaveNetDevice::SetReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > cb);
  is_virtual=True)
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:18050: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::OcbWifiMac::SetLinkUpCallback (ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > linkUp);
  is_virtual=True)
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:18055: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::OcbWifiMac::SetLinkDownCallback (ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > linkDown);
  is_virtual=True)
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::RegularWifiMac::SetForwardUpCallback (ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::Mac48Address, ns3::Mac48Address, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > upCallback);
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:916: Warning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::WaveHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & mac, ns3::NodeContainer c) const;
  register_Ns3WaveHelper_methods(root_module, root_module['ns3::WaveHelper'])
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:916: Warning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::WaveHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & mac, ns3::Ptr< ns3::Node > node) const;
  register_Ns3WaveHelper_methods(root_module, root_module['ns3::WaveHelper'])
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:916: Warning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::WaveHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & mac, std::string nodeName) const;
  register_Ns3WaveHelper_methods(root_module, root_module['ns3::WaveHelper'])
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:946: Warning: exception CodeGenerationError('ns3::AttributeValue cannot be constructed (have pure virtual methods but no helper class)',) in wrapper public: virtual void ns3::NqosWaveMacHelper::SetType (std::string type, std::string n0, ns3::AttributeValue const & v0, std::string n1, ns3::AttributeValue const & v1, std::string n2, ns3::AttributeValue const & v2, std::string n3, ns3::AttributeValue const & v3, std::string n4, ns3::AttributeValue const & v4, std::string n5, ns3::AttributeValue const & v5, std::string n6, ns3::AttributeValue const & v6, std::string n7, ns3::AttributeValue const & v7, std::string n8, ns3::AttributeValue const & v8, std::string n9, ns3::AttributeValue const & v9, std::string n10, ns3::AttributeValue const & v10);
  register_Ns3NqosWaveMacHelper_methods(root_module, root_module['ns3::NqosWaveMacHelper'])
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:950: Warning: exception CodeGenerationError('ns3::AttributeValue cannot be constructed (have pure virtual methods but no helper class)',) in wrapper public: virtual void ns3::QosWaveMacHelper::SetType (std::string type, std::string n0, ns3::AttributeValue const & v0, std::string n1, ns3::AttributeValue const & v1, std::string n2, ns3::AttributeValue const & v2, std::string n3, ns3::AttributeValue const & v3, std::string n4, ns3::AttributeValue const & v4, std::string n5, ns3::AttributeValue const & v5, std::string n6, ns3::AttributeValue const & v6, std::string n7, ns3::AttributeValue const & v7, std::string n8, ns3::AttributeValue const & v8, std::string n9, ns3::AttributeValue const & v9, std::string n10, ns3::AttributeValue const & v10);
  register_Ns3QosWaveMacHelper_methods(root_module, root_module['ns3::QosWaveMacHelper'])
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:986: Warning: exception CodeGenerationError('ns3::WifiPhyHelper cannot be constructed (class has pure virtual methods)',) in wrapper public: virtual ns3::NetDeviceContainer ns3::Wifi80211pHelper::Install (ns3::WifiPhyHelper const & phy, ns3::WifiMacHelper const & macHelper, ns3::NodeContainer c) const;
  register_Ns3Wifi80211pHelper_methods(root_module, root_module['ns3::Wifi80211pHelper'])
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::ChannelCoordinationListener cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::ChannelCoordinationListener'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::ChannelScheduler cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::ChannelScheduler'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::OrganizationIdentifierChecker cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::OrganizationIdentifierChecker'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1109: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::WaveNetDevice::AddLinkChangeCallback (ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > callback);
  register_Ns3WaveNetDevice_methods(root_module, root_module['ns3::WaveNetDevice'])
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1109: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::WaveNetDevice::SetPromiscReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty > cb);
  register_Ns3WaveNetDevice_methods(root_module, root_module['ns3::WaveNetDevice'])
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1109: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::WaveNetDevice::SetReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > cb);
  register_Ns3WaveNetDevice_methods(root_module, root_module['ns3::WaveNetDevice'])
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1117: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::OcbWifiMac::SetLinkUpCallback (ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > linkUp);
  register_Ns3OcbWifiMac_methods(root_module, root_module['ns3::OcbWifiMac'])
/Users/elliottdobbs/Desktop/Fall 2018/Wireless and Mobile Systems/ElliottDobbs/ns-3.26/src/wave/bindings/modulegen__gcc_ILP32.py:1117: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::OcbWifiMac::SetLinkDownCallback (ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > linkDown);
  register_Ns3OcbWifiMac_methods(root_module, root_module['ns3::OcbWifiMac'])
